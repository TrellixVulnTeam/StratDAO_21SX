{"ast":null,"code":"var _jsxFileName = \"/Users/anthonymann/Desktop/Snowbank DAO/snowbank-frontend/src/components/Header/connect-button/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useWeb3Context } from \"../../../hooks\";\nimport { DEFAULD_NETWORK } from \"../../../constants\";\nimport \"./connect-menu.scss\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ConnectMenu() {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    connect,\n    disconnect,\n    connected,\n    web3,\n    providerChainID,\n    checkWrongNetwork\n  } = useWeb3Context();\n  const dispatch = useDispatch();\n  const [isConnected, setConnected] = useState(connected);\n  let pendingTransactions = useSelector(state => {\n    return state.pendingTransactions;\n  });\n  let buttonText = t(\"ConnectWallet\");\n  let clickFunc = connect;\n  let buttonStyle = {};\n\n  if (isConnected) {\n    buttonText = t(\"Disconnect\");\n    clickFunc = disconnect;\n  }\n\n  if (pendingTransactions && pendingTransactions.length > 0) {\n    buttonText = t(\"CountPending\", {\n      count: pendingTransactions.length\n    });\n\n    clickFunc = () => {};\n  }\n\n  if (isConnected && providerChainID !== DEFAULD_NETWORK) {\n    buttonText = t(\"WrongNetwork\");\n    buttonStyle = {\n      backgroundColor: \"rgb(255, 67, 67)\",\n      color: \"#ffffff\"\n    };\n\n    clickFunc = () => {\n      checkWrongNetwork();\n    };\n  }\n\n  useEffect(() => {\n    setConnected(connected);\n  }, [web3, connected]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connect-button\",\n    style: buttonStyle,\n    onClick: clickFunc,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), pendingTransactions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connect-button-progress\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 15,\n        color: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ConnectMenu, \"f0B8qdnBOqqWfDqBPhdL3CndTOo=\", false, function () {\n  return [useTranslation, useWeb3Context, useDispatch, useSelector];\n});\n\n_c = ConnectMenu;\nexport default ConnectMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectMenu\");","map":{"version":3,"sources":["/Users/anthonymann/Desktop/Snowbank DAO/snowbank-frontend/src/components/Header/connect-button/index.tsx"],"names":["useEffect","useState","useDispatch","useSelector","useWeb3Context","DEFAULD_NETWORK","CircularProgress","useTranslation","ConnectMenu","t","connect","disconnect","connected","web3","providerChainID","checkWrongNetwork","dispatch","isConnected","setConnected","pendingTransactions","state","buttonText","clickFunc","buttonStyle","length","count","backgroundColor","color"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AAGA,OAAO,qBAAP;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AAGA,SAASC,cAAT,QAA+B,eAA/B;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAQF,cAAc,EAA5B;AACA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,UAAX;AAAuBC,IAAAA,SAAvB;AAAkCC,IAAAA,IAAlC;AAAwCC,IAAAA,eAAxC;AAAyDC,IAAAA;AAAzD,MAA+EX,cAAc,EAAnG;AACA,QAAMY,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAM,CAACe,WAAD,EAAcC,YAAd,IAA8BjB,QAAQ,CAACW,SAAD,CAA5C;AAEA,MAAIO,mBAAmB,GAAGhB,WAAW,CAA6BiB,KAAK,IAAI;AACvE,WAAOA,KAAK,CAACD,mBAAb;AACH,GAFoC,CAArC;AAIA,MAAIE,UAAU,GAAGZ,CAAC,CAAC,eAAD,CAAlB;AACA,MAAIa,SAAc,GAAGZ,OAArB;AACA,MAAIa,WAAW,GAAG,EAAlB;;AAEA,MAAIN,WAAJ,EAAiB;AACbI,IAAAA,UAAU,GAAGZ,CAAC,CAAC,YAAD,CAAd;AACAa,IAAAA,SAAS,GAAGX,UAAZ;AACH;;AAED,MAAIQ,mBAAmB,IAAIA,mBAAmB,CAACK,MAApB,GAA6B,CAAxD,EAA2D;AACvDH,IAAAA,UAAU,GAAGZ,CAAC,CAAC,cAAD,EAAiB;AAAEgB,MAAAA,KAAK,EAAEN,mBAAmB,CAACK;AAA7B,KAAjB,CAAd;;AACAF,IAAAA,SAAS,GAAG,MAAM,CAAE,CAApB;AACH;;AAED,MAAIL,WAAW,IAAIH,eAAe,KAAKT,eAAvC,EAAwD;AACpDgB,IAAAA,UAAU,GAAGZ,CAAC,CAAC,cAAD,CAAd;AACAc,IAAAA,WAAW,GAAG;AAAEG,MAAAA,eAAe,EAAE,kBAAnB;AAAuCC,MAAAA,KAAK,EAAE;AAA9C,KAAd;;AACAL,IAAAA,SAAS,GAAG,MAAM;AACdP,MAAAA,iBAAiB;AACpB,KAFD;AAGH;;AAEDf,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,YAAY,CAACN,SAAD,CAAZ;AACH,GAFQ,EAEN,CAACC,IAAD,EAAOD,SAAP,CAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,KAAK,EAAEW,WAAvC;AAAoD,IAAA,OAAO,EAAED,SAA7D;AAAA,4BACI;AAAA,gBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKF,mBAAmB,CAACK,MAApB,GAA6B,CAA7B,iBACG;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,6BACI,QAAC,gBAAD;AAAkB,QAAA,IAAI,EAAE,EAAxB;AAA4B,QAAA,KAAK,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA9CQhB,W;UACSD,c,EACuEH,c,EACpEF,W,EAGSC,W;;;KANrBK,W;AAgDT,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useWeb3Context } from \"../../../hooks\";\nimport { DEFAULD_NETWORK } from \"../../../constants\";\nimport { IReduxState } from \"../../../store/slices/state.interface\";\nimport { IPendingTxn } from \"../../../store/slices/pending-txns-slice\";\nimport \"./connect-menu.scss\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { colors } from \"@material-ui/core\";\n\nimport { useTranslation } from \"react-i18next\";\n\nfunction ConnectMenu() {\n    const { t } = useTranslation();\n    const { connect, disconnect, connected, web3, providerChainID, checkWrongNetwork } = useWeb3Context();\n    const dispatch = useDispatch();\n    const [isConnected, setConnected] = useState(connected);\n\n    let pendingTransactions = useSelector<IReduxState, IPendingTxn[]>(state => {\n        return state.pendingTransactions;\n    });\n\n    let buttonText = t(\"ConnectWallet\");\n    let clickFunc: any = connect;\n    let buttonStyle = {};\n\n    if (isConnected) {\n        buttonText = t(\"Disconnect\");\n        clickFunc = disconnect;\n    }\n\n    if (pendingTransactions && pendingTransactions.length > 0) {\n        buttonText = t(\"CountPending\", { count: pendingTransactions.length });\n        clickFunc = () => {};\n    }\n\n    if (isConnected && providerChainID !== DEFAULD_NETWORK) {\n        buttonText = t(\"WrongNetwork\");\n        buttonStyle = { backgroundColor: \"rgb(255, 67, 67)\", color: \"#ffffff\" };\n        clickFunc = () => {\n            checkWrongNetwork();\n        };\n    }\n\n    useEffect(() => {\n        setConnected(connected);\n    }, [web3, connected]);\n\n    return (\n        <div className=\"connect-button\" style={buttonStyle} onClick={clickFunc}>\n            <p>{buttonText}</p>\n            {pendingTransactions.length > 0 && (\n                <div className=\"connect-button-progress\">\n                    <CircularProgress size={15} color=\"inherit\" />\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ConnectMenu;\n"]},"metadata":{},"sourceType":"module"}