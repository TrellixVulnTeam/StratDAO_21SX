{"ast":null,"code":"var _jsxFileName = \"/Users/anthonymann/Desktop/Snowbank DAO/snowbank-frontend/src/views/Bond/BondRedeem.tsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Box, Slide } from \"@material-ui/core\";\nimport { redeemBond } from \"../../store/slices/bond-slice\";\nimport { useWeb3Context } from \"../../hooks\";\nimport { trim, prettifySeconds, prettyVestingPeriod } from \"../../helpers\";\nimport { isPendingTxn, txnButtonText } from \"../../store/slices/pending-txns-slice\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { messages } from \"../../constants/messages\";\nimport { warning } from \"../../store/slices/messages-slice\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BondRedeem(_ref) {\n  _s();\n\n  let {\n    bond\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useDispatch();\n  const {\n    provider,\n    address,\n    chainID,\n    checkWrongNetwork\n  } = useWeb3Context();\n  const isBondLoading = useSelector(state => {\n    var _state$bonding$loadin;\n\n    return (_state$bonding$loadin = state.bonding.loading) !== null && _state$bonding$loadin !== void 0 ? _state$bonding$loadin : true;\n  });\n  const currentBlockTime = useSelector(state => {\n    return state.app.currentBlockTime;\n  });\n  const pendingTransactions = useSelector(state => {\n    return state.pendingTransactions;\n  });\n  const bondingState = useSelector(state => {\n    return state.bonding && state.bonding[bond.name];\n  });\n  const bondDetails = useSelector(state => {\n    return state.account.bonds && state.account.bonds[bond.name];\n  });\n\n  async function onRedeem(autostake) {\n    if (await checkWrongNetwork()) return;\n\n    if (bond.interestDue === 0 || bond.pendingPayout === 0) {\n      dispatch(warning({\n        text: messages.nothing_to_claim\n      }));\n      return;\n    }\n\n    await dispatch(redeemBond({\n      address,\n      bond,\n      networkID: chainID,\n      provider,\n      autostake\n    }));\n  }\n\n  const vestingTime = () => {\n    if (!bondDetails) {\n      return \"\";\n    }\n\n    return prettyVestingPeriod(currentBlockTime, bondDetails.bondMaturationBlock);\n  };\n\n  const vestingPeriod = () => {\n    return prettifySeconds(bondingState.vestingTerm, \"day\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-around\",\n      flexWrap: \"wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction-button bond-approve-btn\",\n        onClick: () => {\n          if (isPendingTxn(pendingTransactions, \"redeem_bond_\" + bond.name)) return;\n          onRedeem(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: txnButtonText(pendingTransactions, \"redeem_bond_\" + bond.name, t(\"bond:Claim\"))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction-button bond-approve-btn\",\n        onClick: () => {\n          if (isPendingTxn(pendingTransactions, \"redeem_bond_\" + bond.name + \"_autostake\")) return;\n          onRedeem(true);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: txnButtonText(pendingTransactions, \"redeem_bond_\" + bond.name + \"_autostake\", t(\"bond:ClaimAutostake\"))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Slide, {\n      direction: \"right\",\n      in: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      timeout: 533,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"bond-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bond-balance-title\",\n            children: t(\"bond:PendingRewards\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"price-data bond-balance-title\",\n            children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"100px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 87\n            }, this) : `${trim(bond.interestDue, 4)} SB`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bond-balance-title\",\n            children: t(\"bond:ClaimableRewards\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"price-data bond-balance-title\",\n            children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"100px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 87\n            }, this) : `${trim(bond.pendingPayout, 4)} SB`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bond-balance-title\",\n            children: t(\"bond:TimeFullyVested\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"price-data bond-balance-title\",\n            children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"100px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 87\n            }, this) : vestingTime()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bond-balance-title\",\n            children: t(\"ROI\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bond-balance-title\",\n            children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"100px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 76\n            }, this) : `${trim(bond.bondDiscount * 100, 2)}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bond-balance-title\",\n            children: t(\"bond:VestingTerm\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bond-balance-title\",\n            children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"100px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 76\n            }, this) : vestingPeriod()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BondRedeem, \"UOOa2QWZU7XHVB2TKF8CbmHg+fQ=\", false, function () {\n  return [useTranslation, useDispatch, useWeb3Context, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = BondRedeem;\nexport default BondRedeem;\n\nvar _c;\n\n$RefreshReg$(_c, \"BondRedeem\");","map":{"version":3,"sources":["/Users/anthonymann/Desktop/Snowbank DAO/snowbank-frontend/src/views/Bond/BondRedeem.tsx"],"names":["useSelector","useDispatch","Box","Slide","redeemBond","useWeb3Context","trim","prettifySeconds","prettyVestingPeriod","isPendingTxn","txnButtonText","Skeleton","messages","warning","useTranslation","BondRedeem","bond","t","dispatch","provider","address","chainID","checkWrongNetwork","isBondLoading","state","bonding","loading","currentBlockTime","app","pendingTransactions","bondingState","name","bondDetails","account","bonds","onRedeem","autostake","interestDue","pendingPayout","text","nothing_to_claim","networkID","vestingTime","bondMaturationBlock","vestingPeriod","vestingTerm","timeout","bondDiscount"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport { Box, Slide } from \"@material-ui/core\";\nimport { IBondDetails, redeemBond } from \"../../store/slices/bond-slice\";\nimport { useWeb3Context } from \"../../hooks\";\nimport { trim, prettifySeconds, prettyVestingPeriod } from \"../../helpers\";\nimport { IPendingTxn, isPendingTxn, txnButtonText } from \"../../store/slices/pending-txns-slice\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { IReduxState } from \"../../store/slices/state.interface\";\nimport { IAllBondData } from \"../../hooks/bonds\";\nimport { IUserBondDetails } from \"../../store/slices/account-slice\";\nimport { messages } from \"../../constants/messages\";\nimport { warning } from \"../../store/slices/messages-slice\";\n\nimport { useTranslation } from \"react-i18next\";\n\ninterface IBondRedeem {\n    bond: IAllBondData;\n}\n\nfunction BondRedeem({ bond }: IBondRedeem) {\n    const { t } = useTranslation();\n\n    const dispatch = useDispatch();\n    const { provider, address, chainID, checkWrongNetwork } = useWeb3Context();\n\n    const isBondLoading = useSelector<IReduxState, boolean>(state => state.bonding.loading ?? true);\n\n    const currentBlockTime = useSelector<IReduxState, number>(state => {\n        return state.app.currentBlockTime;\n    });\n\n    const pendingTransactions = useSelector<IReduxState, IPendingTxn[]>(state => {\n        return state.pendingTransactions;\n    });\n\n    const bondingState = useSelector<IReduxState, IBondDetails>(state => {\n        return state.bonding && state.bonding[bond.name];\n    });\n\n    const bondDetails = useSelector<IReduxState, IUserBondDetails>(state => {\n        return state.account.bonds && state.account.bonds[bond.name];\n    });\n\n    async function onRedeem(autostake: boolean) {\n        if (await checkWrongNetwork()) return;\n\n        if (bond.interestDue === 0 || bond.pendingPayout === 0) {\n            dispatch(warning({ text: messages.nothing_to_claim }));\n            return;\n        }\n\n        await dispatch(redeemBond({ address, bond, networkID: chainID, provider, autostake }));\n    }\n\n    const vestingTime = () => {\n        if (!bondDetails) {\n            return \"\";\n        }\n        return prettyVestingPeriod(currentBlockTime, bondDetails.bondMaturationBlock);\n    };\n\n    const vestingPeriod = () => {\n        return prettifySeconds(bondingState.vestingTerm, \"day\");\n    };\n\n    return (\n        <Box display=\"flex\" flexDirection=\"column\">\n            <Box display=\"flex\" justifyContent=\"space-around\" flexWrap=\"wrap\">\n                <div\n                    className=\"transaction-button bond-approve-btn\"\n                    onClick={() => {\n                        if (isPendingTxn(pendingTransactions, \"redeem_bond_\" + bond.name)) return;\n                        onRedeem(false);\n                    }}\n                >\n                    <p>{txnButtonText(pendingTransactions, \"redeem_bond_\" + bond.name, t(\"bond:Claim\"))}</p>\n                </div>\n                <div\n                    className=\"transaction-button bond-approve-btn\"\n                    onClick={() => {\n                        if (isPendingTxn(pendingTransactions, \"redeem_bond_\" + bond.name + \"_autostake\")) return;\n                        onRedeem(true);\n                    }}\n                >\n                    <p>{txnButtonText(pendingTransactions, \"redeem_bond_\" + bond.name + \"_autostake\", t(\"bond:ClaimAutostake\"))}</p>\n                </div>\n            </Box>\n\n            <Slide direction=\"right\" in={true} mountOnEnter unmountOnExit {...{ timeout: 533 }}>\n                <Box className=\"bond-data\">\n                    <div className=\"data-row\">\n                        <p className=\"bond-balance-title\">{t(\"bond:PendingRewards\")}</p>\n                        <p className=\"price-data bond-balance-title\">{isBondLoading ? <Skeleton width=\"100px\" /> : `${trim(bond.interestDue, 4)} SB`}</p>\n                    </div>\n                    <div className=\"data-row\">\n                        <p className=\"bond-balance-title\">{t(\"bond:ClaimableRewards\")}</p>\n                        <p className=\"price-data bond-balance-title\">{isBondLoading ? <Skeleton width=\"100px\" /> : `${trim(bond.pendingPayout, 4)} SB`}</p>\n                    </div>\n                    <div className=\"data-row\">\n                        <p className=\"bond-balance-title\">{t(\"bond:TimeFullyVested\")}</p>\n                        <p className=\"price-data bond-balance-title\">{isBondLoading ? <Skeleton width=\"100px\" /> : vestingTime()}</p>\n                    </div>\n\n                    <div className=\"data-row\">\n                        <p className=\"bond-balance-title\">{t(\"ROI\")}</p>\n                        <p className=\"bond-balance-title\">{isBondLoading ? <Skeleton width=\"100px\" /> : `${trim(bond.bondDiscount * 100, 2)}%`}</p>\n                    </div>\n\n                    <div className=\"data-row\">\n                        <p className=\"bond-balance-title\">{t(\"bond:VestingTerm\")}</p>\n                        <p className=\"bond-balance-title\">{isBondLoading ? <Skeleton width=\"100px\" /> : vestingPeriod()}</p>\n                    </div>\n                </Box>\n            </Slide>\n        </Box>\n    );\n}\n\nexport default BondRedeem;\n"]},"metadata":{},"sourceType":"module"}