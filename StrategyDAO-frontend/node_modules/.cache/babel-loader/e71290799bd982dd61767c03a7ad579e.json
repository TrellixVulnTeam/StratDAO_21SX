{"ast":null,"code":"var _jsxFileName = \"/Users/anthonymann/Desktop/Snowbank DAO/snowbank-frontend/src/views/Bond/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { trim } from \"../../helpers\";\nimport { Grid, Backdrop, Box, Fade } from \"@material-ui/core\";\nimport TabPanel from \"../../components/TabPanel\";\nimport BondHeader from \"./BondHeader\";\nimport BondRedeem from \"./BondRedeem\";\nimport BondPurchase from \"./BondPurchase\";\nimport \"./bond.scss\";\nimport { useWeb3Context } from \"../../hooks\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport classnames from \"classnames\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Bond(_ref) {\n  _s();\n\n  let {\n    bond\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const {\n    provider,\n    address\n  } = useWeb3Context();\n  const [slippage, setSlippage] = useState(0.5);\n  const [recipientAddress, setRecipientAddress] = useState(address);\n  const [view, setView] = useState(bond.isActive ? 0 : 1);\n  const isBondLoading = useSelector(state => {\n    var _state$bonding$loadin;\n\n    return (_state$bonding$loadin = state.bonding.loading) !== null && _state$bonding$loadin !== void 0 ? _state$bonding$loadin : true;\n  });\n\n  const onRecipientAddressChange = value => {\n    return setRecipientAddress(value);\n  };\n\n  const onSlippageChange = value => {\n    return setSlippage(value);\n  };\n\n  useEffect(() => {\n    if (address) setRecipientAddress(address);\n  }, [provider, address]);\n\n  const changeView = newView => () => {\n    setView(newView);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fade, {\n    in: true,\n    mountOnEnter: true,\n    unmountOnExit: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: \"bond-view\",\n      children: /*#__PURE__*/_jsxDEV(Backdrop, {\n        open: true,\n        children: /*#__PURE__*/_jsxDEV(Fade, {\n          in: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bond-card\",\n            children: [/*#__PURE__*/_jsxDEV(BondHeader, {\n              bond: bond,\n              slippage: slippage,\n              recipientAddress: recipientAddress,\n              onSlippageChange: onSlippageChange,\n              onRecipientAddressChange: onRecipientAddressChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              direction: \"row\",\n              className: \"bond-price-data-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bond-price-data\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"bond-price-data-title\",\n                  children: t(\"bond:MintPrice\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"bond-price-data-value\",\n                  children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 58\n                  }, this) : bond.isLP || bond.name === \"wavax\" ? `$${trim(bond.bondPrice, 2)}` : `${trim(bond.bondPrice, 2)} MIM`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bond-price-data\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"bond-price-data-title\",\n                  children: t(\"SBPrice\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"bond-price-data-value\",\n                  children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 91\n                  }, this) : `$${trim(bond.marketPrice, 2)}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), bond.isActive && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bond-one-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classnames(\"bond-one-table-btn\", {\n                  active: !view\n                }),\n                onClick: changeView(0),\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: t(\"bond:Mint\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classnames(\"bond-one-table-btn\", {\n                  active: view\n                }),\n                onClick: changeView(1),\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: t(\"bond:Redeem\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this), bond.isActive && /*#__PURE__*/_jsxDEV(TabPanel, {\n              value: view,\n              index: 0,\n              children: /*#__PURE__*/_jsxDEV(BondPurchase, {\n                bond: bond,\n                slippage: slippage,\n                recipientAddress: recipientAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n              value: view,\n              index: 1,\n              children: /*#__PURE__*/_jsxDEV(BondRedeem, {\n                bond: bond\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Bond, \"2sbzYIdVVFySLvCiIxR6X17uDPs=\", false, function () {\n  return [useTranslation, useWeb3Context, useSelector];\n});\n\n_c = Bond;\nexport default Bond;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bond\");","map":{"version":3,"sources":["/Users/anthonymann/Desktop/Snowbank DAO/snowbank-frontend/src/views/Bond/index.tsx"],"names":["useState","useEffect","useSelector","trim","Grid","Backdrop","Box","Fade","TabPanel","BondHeader","BondRedeem","BondPurchase","useWeb3Context","Skeleton","classnames","useTranslation","Bond","bond","t","provider","address","slippage","setSlippage","recipientAddress","setRecipientAddress","view","setView","isActive","isBondLoading","state","bonding","loading","onRecipientAddressChange","value","onSlippageChange","changeView","newView","isLP","name","bondPrice","marketPrice","active"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { trim } from \"../../helpers\";\nimport { Grid, Backdrop, Paper, Box, Tab, Tabs, Fade } from \"@material-ui/core\";\nimport TabPanel from \"../../components/TabPanel\";\nimport BondHeader from \"./BondHeader\";\nimport BondRedeem from \"./BondRedeem\";\nimport BondPurchase from \"./BondPurchase\";\nimport \"./bond.scss\";\nimport { useWeb3Context } from \"../../hooks\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { IReduxState } from \"../../store/slices/state.interface\";\nimport { IAllBondData } from \"../../hooks/bonds\";\nimport classnames from \"classnames\";\n\nimport { useTranslation } from \"react-i18next\";\n\ninterface IBondProps {\n    bond: IAllBondData;\n}\n\nfunction Bond({ bond }: IBondProps) {\n    const { t } = useTranslation();\n\n    const { provider, address } = useWeb3Context();\n\n    const [slippage, setSlippage] = useState(0.5);\n    const [recipientAddress, setRecipientAddress] = useState(address);\n\n    const [view, setView] = useState(bond.isActive ? 0 : 1);\n\n    const isBondLoading = useSelector<IReduxState, boolean>(state => state.bonding.loading ?? true);\n\n    const onRecipientAddressChange = (value: any) => {\n        return setRecipientAddress(value);\n    };\n\n    const onSlippageChange = (value: any) => {\n        return setSlippage(value);\n    };\n\n    useEffect(() => {\n        if (address) setRecipientAddress(address);\n    }, [provider, address]);\n\n    const changeView = (newView: number) => () => {\n        setView(newView);\n    };\n\n    return (\n        <Fade in={true} mountOnEnter unmountOnExit>\n            <Grid className=\"bond-view\">\n                <Backdrop open={true}>\n                    <Fade in={true}>\n                        <div className=\"bond-card\">\n                            <BondHeader\n                                bond={bond}\n                                slippage={slippage}\n                                recipientAddress={recipientAddress}\n                                onSlippageChange={onSlippageChange}\n                                onRecipientAddressChange={onRecipientAddressChange}\n                            />\n                            {/* @ts-ignore */}\n                            <Box direction=\"row\" className=\"bond-price-data-row\">\n                                <div className=\"bond-price-data\">\n                                    <p className=\"bond-price-data-title\">{t(\"bond:MintPrice\")}</p>\n                                    <p className=\"bond-price-data-value\">\n                                        {isBondLoading ? <Skeleton /> : bond.isLP || bond.name === \"wavax\" ? `$${trim(bond.bondPrice, 2)}` : `${trim(bond.bondPrice, 2)} MIM`}\n                                    </p>\n                                </div>\n                                <div className=\"bond-price-data\">\n                                    <p className=\"bond-price-data-title\">{t(\"SBPrice\")}</p>\n                                    <p className=\"bond-price-data-value\">{isBondLoading ? <Skeleton /> : `$${trim(bond.marketPrice, 2)}`}</p>\n                                </div>\n                            </Box>\n\n                            {bond.isActive && (\n                                <div className=\"bond-one-table\">\n                                    <div className={classnames(\"bond-one-table-btn\", { active: !view })} onClick={changeView(0)}>\n                                        <p>{t(\"bond:Mint\")}</p>\n                                    </div>\n                                    <div className={classnames(\"bond-one-table-btn\", { active: view })} onClick={changeView(1)}>\n                                        <p>{t(\"bond:Redeem\")}</p>\n                                    </div>\n                                </div>\n                            )}\n\n                            {bond.isActive && (\n                                <TabPanel value={view} index={0}>\n                                    <BondPurchase bond={bond} slippage={slippage} recipientAddress={recipientAddress} />\n                                </TabPanel>\n                            )}\n\n                            <TabPanel value={view} index={1}>\n                                <BondRedeem bond={bond} />\n                            </TabPanel>\n                        </div>\n                    </Fade>\n                </Backdrop>\n            </Grid>\n        </Fade>\n    );\n}\n\nexport default Bond;\n"]},"metadata":{},"sourceType":"module"}