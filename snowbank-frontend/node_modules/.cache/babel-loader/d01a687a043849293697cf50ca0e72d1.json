{"ast":null,"code":"var _jsxFileName = \"/Users/anthonymann/Desktop/Snowbank DAO/snowbank-frontend/src/views/Stake/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid, InputAdornment, OutlinedInput, Zoom } from \"@material-ui/core\";\nimport RebaseTimer from \"../../components/RebaseTimer\";\nimport { trim } from \"../../helpers\";\nimport { changeStake, changeApproval } from \"../../store/slices/stake-thunk\";\nimport \"./stake.scss\";\nimport { useWeb3Context } from \"../../hooks\";\nimport { isPendingTxn, txnButtonText } from \"../../store/slices/pending-txns-slice\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { messages } from \"../../constants/messages\";\nimport classnames from \"classnames\";\nimport { warning } from \"../../store/slices/messages-slice\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Stake() {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useDispatch();\n  const {\n    provider,\n    address,\n    connect,\n    chainID,\n    checkWrongNetwork\n  } = useWeb3Context();\n  const app = useSelector(state => state.app);\n  const [view, setView] = useState(0);\n  const [quantity, setQuantity] = useState(\"\");\n  const isAppLoading = useSelector(state => state.app.loading);\n  const currentIndex = useSelector(state => {\n    return state.app.currentIndex;\n  });\n  const fiveDayRate = useSelector(state => {\n    return state.app.fiveDayRate;\n  });\n  const stratBalance = useSelector(state => {\n    return state.account.balances && state.account.balances.strat;\n  });\n  const sstratBalance = useSelector(state => {\n    return state.account.balances && state.account.balances.sstrat;\n  });\n  const wsstratBalance = useSelector(state => {\n    return state.account.balances && state.account.balances.wsstrat;\n  });\n  const stakeAllowance = useSelector(state => {\n    return state.account.staking && state.account.staking.strat;\n  });\n  const unstakeAllowance = useSelector(state => {\n    return state.account.staking && state.account.staking.sstrat;\n  });\n  const stakingRebase = useSelector(state => {\n    return state.app.stakingRebase;\n  });\n  const stakingAPY = useSelector(state => {\n    return state.app.stakingAPY;\n  });\n  const stakingTVL = useSelector(state => {\n    return state.app.stakingTVL;\n  });\n  const pendingTransactions = useSelector(state => {\n    return state.pendingTransactions;\n  });\n\n  const setMax = () => {\n    if (view === 0) {\n      setQuantity(stratBalance);\n    } else {\n      setQuantity(sstratBalance);\n    }\n  };\n\n  const onSeekApproval = async token => {\n    if (await checkWrongNetwork()) return;\n    await dispatch(changeApproval({\n      address,\n      token,\n      provider,\n      networkID: chainID\n    }));\n  };\n\n  const onChangeStake = async action => {\n    if (await checkWrongNetwork()) return;\n\n    if (quantity === \"\" || parseFloat(quantity) === 0) {\n      dispatch(warning({\n        text: action === \"stake\" ? messages.before_stake : messages.before_unstake\n      }));\n    } else {\n      await dispatch(changeStake({\n        address,\n        action,\n        value: String(quantity),\n        provider,\n        networkID: chainID\n      }));\n      setQuantity(\"\");\n    }\n  };\n\n  const hasAllowance = useCallback(token => {\n    if (token === \"strat\") return stakeAllowance > 0;\n    if (token === \"sstrat\") return unstakeAllowance > 0;\n    return 0;\n  }, [stakeAllowance]);\n\n  const changeView = newView => () => {\n    setView(newView);\n    setQuantity(\"\");\n  };\n\n  const trimmedSSTRATBalance = trim(Number(sSTRATBalance), 6);\n  const trimmedWrappedStakedSTRATBalance = trim(Number(wsSTRATBalance), 6);\n  const trimmedStakingAPY = trim(stakingAPY * 100, 1);\n  const stakingRebasePercentage = trim(stakingRebase * 100, 4);\n  const nextRewardValue = trim(Number(stakingRebasePercentage) / 100 * Number(trimmedSSTRATBalance), 6);\n  const wrappedTokenEquivalent = trim(Number(trimmedWrappedStakedSTRATBalance) * Number(currentIndex), 6);\n  const effectiveNextRewardValue = trim(Number(Number(nextRewardValue) + Number(stakingRebasePercentage) / 100 * Number(wrappedTokenEquivalent)), 6);\n  const valueOfSTRAT = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    maximumFractionDigits: 2,\n    minimumFractionDigits: 2\n  }).format(Number(STRATBalance) * app.marketPrice);\n  const valueOfStakedBalance = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    maximumFractionDigits: 2,\n    minimumFractionDigits: 2\n  }).format(Number(trimmedSSTRATBalance) * app.marketPrice);\n  const valueOfWrappedStakedBalance = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    maximumFractionDigits: 2,\n    minimumFractionDigits: 2\n  }).format(Number(trimmedWrappedStakedSTRATBalance) * Number(currentIndex) * app.marketPrice);\n  const sumOfAllBalance = Number(STRATBalance) + Number(trimmedSSTRATBalance) + Number(trimmedWrappedStakedSTRATBalance) * Number(currentIndex);\n  const valueOfAllBalance = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    maximumFractionDigits: 2,\n    minimumFractionDigits: 2\n  }).format(sumOfAllBalance * app.marketPrice);\n  const valueOfYourNextRewardAmount = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    maximumFractionDigits: 2,\n    minimumFractionDigits: 2\n  }).format(Number(nextRewardValue) * app.marketPrice);\n  const valueOfYourEffectiveNextRewardAmount = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    maximumFractionDigits: 2,\n    minimumFractionDigits: 2\n  }).format(Number(effectiveNextRewardValue) * app.marketPrice);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stake-view\",\n    children: [/*#__PURE__*/_jsxDEV(Zoom, {\n      in: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stake-card\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          className: \"stake-card-grid\",\n          container: true,\n          direction: \"column\",\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stake-card-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"stake-card-header-title\",\n                children: t(\"stake:StakeTitle\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(RebaseTimer, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stake-card-metrics\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  sm: 3,\n                  md: 3,\n                  lg: 3,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stake-card-apy\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"stake-card-metrics-title\",\n                      children: t(\"APY\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"stake-card-metrics-value\",\n                      children: stakingAPY ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [new Intl.NumberFormat(\"en-US\").format(Number(trimmedStakingAPY)), \"%\"]\n                      }, void 0, true) : /*#__PURE__*/_jsxDEV(Skeleton, {\n                        width: \"150px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 168,\n                        columnNumber: 138\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  sm: 3,\n                  md: 3,\n                  lg: 3,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stake-card-tvl\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"stake-card-metrics-title\",\n                      children: t(\"TVL\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"stake-card-metrics-value\",\n                      children: stakingTVL ? new Intl.NumberFormat(\"en-US\", {\n                        style: \"currency\",\n                        currency: \"USD\",\n                        maximumFractionDigits: 0,\n                        minimumFractionDigits: 0\n                      }).format(stakingTVL) : /*#__PURE__*/_jsxDEV(Skeleton, {\n                        width: \"150px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 185,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  sm: 3,\n                  md: 3,\n                  lg: 3,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stake-card-index\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"stake-card-metrics-title\",\n                      children: t(\"CurrentIndex\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"stake-card-metrics-value\",\n                      children: currentIndex ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [trim(Number(currentIndex), 2), \" STRAT\"]\n                      }, void 0, true) : /*#__PURE__*/_jsxDEV(Skeleton, {\n                        width: \"150px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 146\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  sm: 3,\n                  md: 3,\n                  lg: 3,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stake-card-index\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"stake-card-metrics-title\",\n                      children: t(\"STRATPrice\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"stake-card-metrics-value\",\n                      children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                        width: \"100px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 101\n                      }, this) : `$${trim(app.marketPrice, 2)}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stake-card-area\",\n            children: [!address && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stake-card-wallet-notification\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stake-card-wallet-connect-btn\",\n                onClick: connect,\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: t(\"ConnectWallet\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"stake-card-wallet-desc-text\",\n                children: t(\"stake:ConnectYourWalletToStake\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this), address && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stake-card-action-area\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stake-card-action-stage-btns-wrap\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    onClick: changeView(0),\n                    className: classnames(\"stake-card-action-stage-btn\", {\n                      active: !view\n                    }),\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: t(\"stake:Stake\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    onClick: changeView(1),\n                    className: classnames(\"stake-card-action-stage-btn\", {\n                      active: view\n                    }),\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: t(\"stake:Unstake\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stake-card-action-row\",\n                  children: [/*#__PURE__*/_jsxDEV(OutlinedInput, {\n                    type: \"number\",\n                    placeholder: t(\"Amount\"),\n                    className: \"stake-card-action-input\",\n                    value: quantity,\n                    onChange: e => setQuantity(e.target.value),\n                    labelWidth: 0,\n                    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"end\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        onClick: setMax,\n                        className: \"stake-card-action-input-btn\",\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: t(\"Max\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 240,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 239,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 238,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 45\n                  }, this), view === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stake-card-tab-panel\",\n                    children: address && hasAllowance(\"STRAT\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"stake-card-tab-panel-btn\",\n                      onClick: () => {\n                        if (isPendingTxn(pendingTransactions, \"staking\")) return;\n                        onChangeStake(\"stake\");\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: txnButtonText(pendingTransactions, \"staking\", t(\"Stake STRAT\"))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 256,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 57\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"stake-card-tab-panel-btn\",\n                      onClick: () => {\n                        if (isPendingTxn(pendingTransactions, \"approve_staking\")) return;\n                        onSeekApproval(\"STRAT\");\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: txnButtonText(pendingTransactions, \"approve_staking\", t(\"Approve\"))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 266,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 49\n                  }, this), view === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stake-card-tab-panel\",\n                    children: address && hasAllowance(\"sSTRAT\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"stake-card-tab-panel-btn\",\n                      onClick: () => {\n                        if (isPendingTxn(pendingTransactions, \"unstaking\")) return;\n                        onChangeStake(\"unstake\");\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: txnButtonText(pendingTransactions, \"unstaking\", t(\"Unstake STRAT\"))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 282,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 57\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"stake-card-tab-panel-btn\",\n                      onClick: () => {\n                        if (isPendingTxn(pendingTransactions, \"approve_unstaking\")) return;\n                        onSeekApproval(\"sSTRAT\");\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: txnButtonText(pendingTransactions, \"approve_unstaking\", t(\"Approve\"))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 292,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stake-card-action-help-text\",\n                  children: address && (!hasAllowance(\"STRAT\") && view === 0 || !hasAllowance(\"sSTRAT\") && view === 1) && /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: t(\"stake:ApproveNote\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 144\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stake-user-data\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"data-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"data-row-name\",\n                    children: t(\"YourBalance\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"data-row-value\",\n                    children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                      width: \"80px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 91\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [trim(Number(STRATBalance), 4), \" STRAT\"]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"data-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"data-row-name\",\n                    children: t(\"stake:YourStakedBalance\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"data-row-value\",\n                    children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                      width: \"80px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 91\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [trimmedSSTRATBalance, \" sSTRAT\"]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 41\n                }, this), Number(trimmedWrappedStakedSTRATBalance) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"data-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"data-row-name\",\n                    children: t(\"stake:YourWrappedStakedBalance\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"data-row-value\",\n                    children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                      width: \"80px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 95\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [trimmedWrappedStakedSTRATBalance, \" wsSTRAT\"]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 45\n                }, this), Number(trimmedWrappedStakedSTRATBalance) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"data-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"data-row-name\",\n                    children: t(\"stake:WrappedTokenEquivalent\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"data-row-value\",\n                    children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                      width: \"80px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 325,\n                      columnNumber: 95\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [\"(\", wrappedTokenEquivalent, \" sSTRAT)\"]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"data-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"data-row-name\",\n                    children: t(\"stake:NextRewardAmount\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"data-row-value\",\n                    children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                      width: \"80px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 330,\n                      columnNumber: 91\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [nextRewardValue, \" STRAT\"]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 41\n                }, this), Number(trimmedWrappedStakedSTRATBalance) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"data-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"data-row-name\",\n                    children: t(\"stake:EffectiveNextRewardAmount\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"data-row-value\",\n                    children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                      width: \"80px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 336,\n                      columnNumber: 95\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [effectiveNextRewardValue, \" STRAT\"]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"data-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"data-row-name\",\n                    children: t(\"stake:NextRewardYield\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"data-row-value\",\n                    children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                      width: \"80px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 342,\n                      columnNumber: 91\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [stakingRebasePercentage, \"%\"]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"data-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"data-row-name\",\n                    children: t(\"stake:ROIFiveDayRate\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"data-row-value\",\n                    children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                      width: \"80px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 347,\n                      columnNumber: 91\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [trim(Number(fiveDayRate) * 100, 4), \"%\"]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Zoom, {\n      in: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: address && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stake-card\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            className: \"stake-card-grid\",\n            container: true,\n            direction: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stake-card-header data-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"stake-card-header-title\",\n                  children: t(\"YourBalance\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"stake-card-header-title\",\n                  children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                    width: \"80px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 96\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: valueOfAllBalance\n                  }, void 0, false)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stake-card-area\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"data-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"data-row-name\",\n                      children: t(\"stake:ValueOfYourSTRAT\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"data-row-value\",\n                      children: [\" \", isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                        width: \"80px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 373,\n                        columnNumber: 96\n                      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: valueOfSTRAT\n                      }, void 0, false)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 373,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"data-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"data-row-name\",\n                      children: t(\"stake:ValueOfYourStakedSTRAT\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 377,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"data-row-value\",\n                      children: [\" \", isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                        width: \"80px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 378,\n                        columnNumber: 96\n                      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: valueOfStakedBalance\n                      }, void 0, false)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 378,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"data-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"data-row-name\",\n                      children: t(\"stake:ValueOfYourNextRewardAmount\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 382,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"data-row-value\",\n                      children: [\" \", isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                        width: \"80px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 383,\n                        columnNumber: 96\n                      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: valueOfYourNextRewardAmount\n                      }, void 0, false)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 383,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"data-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"data-row-name\",\n                      children: t(\"stake:ValueOfYourEffectiveNextRewardAmount\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"data-row-value\",\n                      children: [\" \", isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                        width: \"80px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 388,\n                        columnNumber: 96\n                      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: valueOfYourEffectiveNextRewardAmount\n                      }, void 0, false)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 388,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 45\n                  }, this), Number(trimmedWrappedStakedSTRATBalance) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"data-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"data-row-name\",\n                      children: t(\"stake:ValueOfYourWrappedStakedSTRAT\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 393,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"data-row-value\",\n                      children: [\" \", isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                        width: \"80px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 394,\n                        columnNumber: 100\n                      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: valueOfWrappedStakedBalance\n                      }, void 0, false)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 394,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Stake, \"Yzsx0DnwwYwHCZnOTAe1CcMHZUU=\", false, function () {\n  return [useTranslation, useDispatch, useWeb3Context, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Stake;\nexport default Stake;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stake\");","map":{"version":3,"sources":["/Users/anthonymann/Desktop/Snowbank DAO/snowbank-frontend/src/views/Stake/index.tsx"],"names":["useState","useCallback","useSelector","useDispatch","Grid","InputAdornment","OutlinedInput","Zoom","RebaseTimer","trim","changeStake","changeApproval","useWeb3Context","isPendingTxn","txnButtonText","Skeleton","messages","classnames","warning","useTranslation","Stake","t","dispatch","provider","address","connect","chainID","checkWrongNetwork","app","state","view","setView","quantity","setQuantity","isAppLoading","loading","currentIndex","fiveDayRate","stratBalance","account","balances","strat","sstratBalance","sstrat","wsstratBalance","wsstrat","stakeAllowance","staking","unstakeAllowance","stakingRebase","stakingAPY","stakingTVL","pendingTransactions","setMax","onSeekApproval","token","networkID","onChangeStake","action","parseFloat","text","before_stake","before_unstake","value","String","hasAllowance","changeView","newView","trimmedSSTRATBalance","Number","sSTRATBalance","trimmedWrappedStakedSTRATBalance","wsSTRATBalance","trimmedStakingAPY","stakingRebasePercentage","nextRewardValue","wrappedTokenEquivalent","effectiveNextRewardValue","valueOfSTRAT","Intl","NumberFormat","style","currency","maximumFractionDigits","minimumFractionDigits","format","STRATBalance","marketPrice","valueOfStakedBalance","valueOfWrappedStakedBalance","sumOfAllBalance","valueOfAllBalance","valueOfYourNextRewardAmount","valueOfYourEffectiveNextRewardAmount","active","e","target"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,aAA/B,EAA8CC,IAA9C,QAA0D,mBAA1D;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,gCAA5C;AACA,OAAO,cAAP;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAAsBC,YAAtB,EAAoCC,aAApC,QAAyD,uCAAzD;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,OAAT,QAAwB,mCAAxB;AAGA,SAASC,cAAT,QAA+B,eAA/B;;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAM;AAAEC,IAAAA;AAAF,MAAQF,cAAc,EAA5B;AAEA,QAAMG,QAAQ,GAAGnB,WAAW,EAA5B;AACA,QAAM;AAAEoB,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,OAArB;AAA8BC,IAAAA,OAA9B;AAAuCC,IAAAA;AAAvC,MAA6Df,cAAc,EAAjF;AACA,QAAMgB,GAAG,GAAG1B,WAAW,CAAyB2B,KAAK,IAAIA,KAAK,CAACD,GAAxC,CAAvB;AAEA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkB/B,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACgC,QAAD,EAAWC,WAAX,IAA0BjC,QAAQ,CAAS,EAAT,CAAxC;AAEA,QAAMkC,YAAY,GAAGhC,WAAW,CAAuB2B,KAAK,IAAIA,KAAK,CAACD,GAAN,CAAUO,OAA1C,CAAhC;AACA,QAAMC,YAAY,GAAGlC,WAAW,CAAsB2B,KAAK,IAAI;AAC3D,WAAOA,KAAK,CAACD,GAAN,CAAUQ,YAAjB;AACH,GAF+B,CAAhC;AAGA,QAAMC,WAAW,GAAGnC,WAAW,CAAsB2B,KAAK,IAAI;AAC1D,WAAOA,KAAK,CAACD,GAAN,CAAUS,WAAjB;AACH,GAF8B,CAA/B;AAGA,QAAMC,YAAY,GAAGpC,WAAW,CAAsB2B,KAAK,IAAI;AAC3D,WAAOA,KAAK,CAACU,OAAN,CAAcC,QAAd,IAA0BX,KAAK,CAACU,OAAN,CAAcC,QAAd,CAAuBC,KAAxD;AACH,GAF+B,CAAhC;AAGA,QAAMC,aAAa,GAAGxC,WAAW,CAAsB2B,KAAK,IAAI;AAC5D,WAAOA,KAAK,CAACU,OAAN,CAAcC,QAAd,IAA0BX,KAAK,CAACU,OAAN,CAAcC,QAAd,CAAuBG,MAAxD;AACH,GAFgC,CAAjC;AAGA,QAAMC,cAAc,GAAG1C,WAAW,CAAsB2B,KAAK,IAAI;AAC7D,WAAOA,KAAK,CAACU,OAAN,CAAcC,QAAd,IAA0BX,KAAK,CAACU,OAAN,CAAcC,QAAd,CAAuBK,OAAxD;AACH,GAFiC,CAAlC;AAGA,QAAMC,cAAc,GAAG5C,WAAW,CAAsB2B,KAAK,IAAI;AAC7D,WAAOA,KAAK,CAACU,OAAN,CAAcQ,OAAd,IAAyBlB,KAAK,CAACU,OAAN,CAAcQ,OAAd,CAAsBN,KAAtD;AACH,GAFiC,CAAlC;AAGA,QAAMO,gBAAgB,GAAG9C,WAAW,CAAsB2B,KAAK,IAAI;AAC/D,WAAOA,KAAK,CAACU,OAAN,CAAcQ,OAAd,IAAyBlB,KAAK,CAACU,OAAN,CAAcQ,OAAd,CAAsBJ,MAAtD;AACH,GAFmC,CAApC;AAGA,QAAMM,aAAa,GAAG/C,WAAW,CAAsB2B,KAAK,IAAI;AAC5D,WAAOA,KAAK,CAACD,GAAN,CAAUqB,aAAjB;AACH,GAFgC,CAAjC;AAGA,QAAMC,UAAU,GAAGhD,WAAW,CAAsB2B,KAAK,IAAI;AACzD,WAAOA,KAAK,CAACD,GAAN,CAAUsB,UAAjB;AACH,GAF6B,CAA9B;AAGA,QAAMC,UAAU,GAAGjD,WAAW,CAAsB2B,KAAK,IAAI;AACzD,WAAOA,KAAK,CAACD,GAAN,CAAUuB,UAAjB;AACH,GAF6B,CAA9B;AAIA,QAAMC,mBAAmB,GAAGlD,WAAW,CAA6B2B,KAAK,IAAI;AACzE,WAAOA,KAAK,CAACuB,mBAAb;AACH,GAFsC,CAAvC;;AAIA,QAAMC,MAAM,GAAG,MAAM;AACjB,QAAIvB,IAAI,KAAK,CAAb,EAAgB;AACZG,MAAAA,WAAW,CAACK,YAAD,CAAX;AACH,KAFD,MAEO;AACHL,MAAAA,WAAW,CAACS,aAAD,CAAX;AACH;AACJ,GAND;;AAQA,QAAMY,cAAc,GAAG,MAAOC,KAAP,IAAyB;AAC5C,QAAI,MAAM5B,iBAAiB,EAA3B,EAA+B;AAE/B,UAAML,QAAQ,CAACX,cAAc,CAAC;AAAEa,MAAAA,OAAF;AAAW+B,MAAAA,KAAX;AAAkBhC,MAAAA,QAAlB;AAA4BiC,MAAAA,SAAS,EAAE9B;AAAvC,KAAD,CAAf,CAAd;AACH,GAJD;;AAMA,QAAM+B,aAAa,GAAG,MAAOC,MAAP,IAA0B;AAC5C,QAAI,MAAM/B,iBAAiB,EAA3B,EAA+B;;AAC/B,QAAIK,QAAQ,KAAK,EAAb,IAAmB2B,UAAU,CAAC3B,QAAD,CAAV,KAAyB,CAAhD,EAAmD;AAC/CV,MAAAA,QAAQ,CAACJ,OAAO,CAAC;AAAE0C,QAAAA,IAAI,EAAEF,MAAM,KAAK,OAAX,GAAqB1C,QAAQ,CAAC6C,YAA9B,GAA6C7C,QAAQ,CAAC8C;AAA9D,OAAD,CAAR,CAAR;AACH,KAFD,MAEO;AACH,YAAMxC,QAAQ,CAACZ,WAAW,CAAC;AAAEc,QAAAA,OAAF;AAAWkC,QAAAA,MAAX;AAAmBK,QAAAA,KAAK,EAAEC,MAAM,CAAChC,QAAD,CAAhC;AAA4CT,QAAAA,QAA5C;AAAsDiC,QAAAA,SAAS,EAAE9B;AAAjE,OAAD,CAAZ,CAAd;AACAO,MAAAA,WAAW,CAAC,EAAD,CAAX;AACH;AACJ,GARD;;AAUA,QAAMgC,YAAY,GAAGhE,WAAW,CAC5BsD,KAAK,IAAI;AACL,QAAIA,KAAK,KAAK,OAAd,EAAuB,OAAOT,cAAc,GAAG,CAAxB;AACvB,QAAIS,KAAK,KAAK,QAAd,EAAwB,OAAOP,gBAAgB,GAAG,CAA1B;AACxB,WAAO,CAAP;AACH,GAL2B,EAM5B,CAACF,cAAD,CAN4B,CAAhC;;AASA,QAAMoB,UAAU,GAAIC,OAAD,IAAqB,MAAM;AAC1CpC,IAAAA,OAAO,CAACoC,OAAD,CAAP;AACAlC,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH,GAHD;;AAKA,QAAMmC,oBAAoB,GAAG3D,IAAI,CAAC4D,MAAM,CAACC,aAAD,CAAP,EAAwB,CAAxB,CAAjC;AACA,QAAMC,gCAAgC,GAAG9D,IAAI,CAAC4D,MAAM,CAACG,cAAD,CAAP,EAAyB,CAAzB,CAA7C;AACA,QAAMC,iBAAiB,GAAGhE,IAAI,CAACyC,UAAU,GAAG,GAAd,EAAmB,CAAnB,CAA9B;AACA,QAAMwB,uBAAuB,GAAGjE,IAAI,CAACwC,aAAa,GAAG,GAAjB,EAAsB,CAAtB,CAApC;AACA,QAAM0B,eAAe,GAAGlE,IAAI,CAAE4D,MAAM,CAACK,uBAAD,CAAN,GAAkC,GAAnC,GAA0CL,MAAM,CAACD,oBAAD,CAAjD,EAAyE,CAAzE,CAA5B;AACA,QAAMQ,sBAAsB,GAAGnE,IAAI,CAAC4D,MAAM,CAACE,gCAAD,CAAN,GAA2CF,MAAM,CAACjC,YAAD,CAAlD,EAAkE,CAAlE,CAAnC;AACA,QAAMyC,wBAAwB,GAAGpE,IAAI,CAAC4D,MAAM,CAACA,MAAM,CAACM,eAAD,CAAN,GAA2BN,MAAM,CAACK,uBAAD,CAAN,GAAkC,GAAnC,GAA0CL,MAAM,CAACO,sBAAD,CAA3E,CAAP,EAA6G,CAA7G,CAArC;AACA,QAAME,YAAY,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAChDC,IAAAA,KAAK,EAAE,UADyC;AAEhDC,IAAAA,QAAQ,EAAE,KAFsC;AAGhDC,IAAAA,qBAAqB,EAAE,CAHyB;AAIhDC,IAAAA,qBAAqB,EAAE;AAJyB,GAA/B,EAKlBC,MALkB,CAKXhB,MAAM,CAACiB,YAAD,CAAN,GAAuB1D,GAAG,CAAC2D,WALhB,CAArB;AAMA,QAAMC,oBAAoB,GAAG,IAAIT,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AACxDC,IAAAA,KAAK,EAAE,UADiD;AAExDC,IAAAA,QAAQ,EAAE,KAF8C;AAGxDC,IAAAA,qBAAqB,EAAE,CAHiC;AAIxDC,IAAAA,qBAAqB,EAAE;AAJiC,GAA/B,EAK1BC,MAL0B,CAKnBhB,MAAM,CAACD,oBAAD,CAAN,GAA+BxC,GAAG,CAAC2D,WALhB,CAA7B;AAMA,QAAME,2BAA2B,GAAG,IAAIV,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC/DC,IAAAA,KAAK,EAAE,UADwD;AAE/DC,IAAAA,QAAQ,EAAE,KAFqD;AAG/DC,IAAAA,qBAAqB,EAAE,CAHwC;AAI/DC,IAAAA,qBAAqB,EAAE;AAJwC,GAA/B,EAKjCC,MALiC,CAK1BhB,MAAM,CAACE,gCAAD,CAAN,GAA2CF,MAAM,CAACjC,YAAD,CAAjD,GAAkER,GAAG,CAAC2D,WAL5C,CAApC;AAOA,QAAMG,eAAe,GAAGrB,MAAM,CAACiB,YAAD,CAAN,GAAuBjB,MAAM,CAACD,oBAAD,CAA7B,GAAsDC,MAAM,CAACE,gCAAD,CAAN,GAA2CF,MAAM,CAACjC,YAAD,CAA/H;AACA,QAAMuD,iBAAiB,GAAG,IAAIZ,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AACrDC,IAAAA,KAAK,EAAE,UAD8C;AAErDC,IAAAA,QAAQ,EAAE,KAF2C;AAGrDC,IAAAA,qBAAqB,EAAE,CAH8B;AAIrDC,IAAAA,qBAAqB,EAAE;AAJ8B,GAA/B,EAKvBC,MALuB,CAKhBK,eAAe,GAAG9D,GAAG,CAAC2D,WALN,CAA1B;AAMA,QAAMK,2BAA2B,GAAG,IAAIb,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC/DC,IAAAA,KAAK,EAAE,UADwD;AAE/DC,IAAAA,QAAQ,EAAE,KAFqD;AAG/DC,IAAAA,qBAAqB,EAAE,CAHwC;AAI/DC,IAAAA,qBAAqB,EAAE;AAJwC,GAA/B,EAKjCC,MALiC,CAK1BhB,MAAM,CAACM,eAAD,CAAN,GAA0B/C,GAAG,CAAC2D,WALJ,CAApC;AAMA,QAAMM,oCAAoC,GAAG,IAAId,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AACxEC,IAAAA,KAAK,EAAE,UADiE;AAExEC,IAAAA,QAAQ,EAAE,KAF8D;AAGxEC,IAAAA,qBAAqB,EAAE,CAHiD;AAIxEC,IAAAA,qBAAqB,EAAE;AAJiD,GAA/B,EAK1CC,MAL0C,CAKnChB,MAAM,CAACQ,wBAAD,CAAN,GAAmCjD,GAAG,CAAC2D,WALJ,CAA7C;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,IAAV;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAkC,UAAA,SAAS,MAA3C;AAA4C,UAAA,SAAS,EAAC,QAAtD;AAA+D,UAAA,OAAO,EAAE,CAAxE;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,sCACI;AAAG,gBAAA,SAAS,EAAC,yBAAb;AAAA,0BAAwClE,CAAC,CAAC,kBAAD;AAAzC;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,SAAS,MAAf;AAAgB,gBAAA,OAAO,EAAE,CAAzB;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,CAAf;AAAkB,kBAAA,EAAE,EAAE,CAAtB;AAAyB,kBAAA,EAAE,EAAE,CAA7B;AAAgC,kBAAA,EAAE,EAAE,CAApC;AAAA,yCACI;AAAK,oBAAA,SAAS,EAAC,gBAAf;AAAA,4CACI;AAAG,sBAAA,SAAS,EAAC,0BAAb;AAAA,gCAAyCA,CAAC,CAAC,KAAD;AAA1C;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAG,sBAAA,SAAS,EAAC,0BAAb;AAAA,gCACK6B,UAAU,gBAAG;AAAA,mCAAG,IAAI6B,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+BK,MAA/B,CAAsChB,MAAM,CAACI,iBAAD,CAA5C,CAAH;AAAA,sCAAH,gBAA8E,QAAC,QAAD;AAAU,wBAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AAD7F;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAUI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,CAAf;AAAkB,kBAAA,EAAE,EAAE,CAAtB;AAAyB,kBAAA,EAAE,EAAE,CAA7B;AAAgC,kBAAA,EAAE,EAAE,CAApC;AAAA,yCACI;AAAK,oBAAA,SAAS,EAAC,gBAAf;AAAA,4CACI;AAAG,sBAAA,SAAS,EAAC,0BAAb;AAAA,gCAAyCpD,CAAC,CAAC,KAAD;AAA1C;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAG,sBAAA,SAAS,EAAC,0BAAb;AAAA,gCACK8B,UAAU,GACP,IAAI4B,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC3BC,wBAAAA,KAAK,EAAE,UADoB;AAE3BC,wBAAAA,QAAQ,EAAE,KAFiB;AAG3BC,wBAAAA,qBAAqB,EAAE,CAHI;AAI3BC,wBAAAA,qBAAqB,EAAE;AAJI,uBAA/B,EAKGC,MALH,CAKUlC,UALV,CADO,gBAQP,QAAC,QAAD;AAAU,wBAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AATR;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAVJ,eA4BI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,CAAf;AAAkB,kBAAA,EAAE,EAAE,CAAtB;AAAyB,kBAAA,EAAE,EAAE,CAA7B;AAAgC,kBAAA,EAAE,EAAE,CAApC;AAAA,yCACI;AAAK,oBAAA,SAAS,EAAC,kBAAf;AAAA,4CACI;AAAG,sBAAA,SAAS,EAAC,0BAAb;AAAA,gCAAyC9B,CAAC,CAAC,cAAD;AAA1C;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAG,sBAAA,SAAS,EAAC,0BAAb;AAAA,gCAAyCe,YAAY,gBAAG;AAAA,mCAAG3B,IAAI,CAAC4D,MAAM,CAACjC,YAAD,CAAP,EAAuB,CAAvB,CAAP;AAAA,sCAAH,gBAAgD,QAAC,QAAD;AAAU,wBAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AAArG;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBA5BJ,eAmCI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,CAAf;AAAkB,kBAAA,EAAE,EAAE,CAAtB;AAAyB,kBAAA,EAAE,EAAE,CAA7B;AAAgC,kBAAA,EAAE,EAAE,CAApC;AAAA,yCACI;AAAK,oBAAA,SAAS,EAAC,kBAAf;AAAA,4CACI;AAAG,sBAAA,SAAS,EAAC,0BAAb;AAAA,gCAAyCf,CAAC,CAAC,YAAD;AAA1C;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAG,sBAAA,SAAS,EAAC,0BAAb;AAAA,gCAAyCa,YAAY,gBAAG,QAAC,QAAD;AAAU,wBAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,8BAAH,GAAiC,IAAGzB,IAAI,CAACmB,GAAG,CAAC2D,WAAL,EAAkB,CAAlB,CAAqB;AAAlH;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAnCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBARJ,eAuDI;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,uBACK,CAAC/D,OAAD,iBACG;AAAK,cAAA,SAAS,EAAC,gCAAf;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,+BAAf;AAA+C,gBAAA,OAAO,EAAEC,OAAxD;AAAA,uCACI;AAAA,4BAAIJ,CAAC,CAAC,eAAD;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII;AAAG,gBAAA,SAAS,EAAC,6BAAb;AAAA,0BAA4CA,CAAC,CAAC,gCAAD;AAA7C;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFR,EASKG,OAAO,iBACJ;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,wBAAf;AAAA,wCACI;AAAK,kBAAA,SAAS,EAAC,mCAAf;AAAA,0CACI;AAAK,oBAAA,OAAO,EAAE0C,UAAU,CAAC,CAAD,CAAxB;AAA6B,oBAAA,SAAS,EAAEjD,UAAU,CAAC,6BAAD,EAAgC;AAAE6E,sBAAAA,MAAM,EAAE,CAAChE;AAAX,qBAAhC,CAAlD;AAAA,2CACI;AAAA,gCAAIT,CAAC,CAAC,aAAD;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII;AAAK,oBAAA,OAAO,EAAE6C,UAAU,CAAC,CAAD,CAAxB;AAA6B,oBAAA,SAAS,EAAEjD,UAAU,CAAC,6BAAD,EAAgC;AAAE6E,sBAAAA,MAAM,EAAEhE;AAAV,qBAAhC,CAAlD;AAAA,2CACI;AAAA,gCAAIT,CAAC,CAAC,eAAD;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAUI;AAAK,kBAAA,SAAS,EAAC,uBAAf;AAAA,0CACI,QAAC,aAAD;AACI,oBAAA,IAAI,EAAC,QADT;AAEI,oBAAA,WAAW,EAAEA,CAAC,CAAC,QAAD,CAFlB;AAGI,oBAAA,SAAS,EAAC,yBAHd;AAII,oBAAA,KAAK,EAAEW,QAJX;AAKI,oBAAA,QAAQ,EAAE+D,CAAC,IAAI9D,WAAW,CAAC8D,CAAC,CAACC,MAAF,CAASjC,KAAV,CAL9B;AAMI,oBAAA,UAAU,EAAE,CANhB;AAOI,oBAAA,YAAY,eACR,QAAC,cAAD;AAAgB,sBAAA,QAAQ,EAAC,KAAzB;AAAA,6CACI;AAAK,wBAAA,OAAO,EAAEV,MAAd;AAAsB,wBAAA,SAAS,EAAC,6BAAhC;AAAA,+CACI;AAAA,oCAAIhC,CAAC,CAAC,KAAD;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AARR;AAAA;AAAA;AAAA;AAAA,0BADJ,EAiBKS,IAAI,KAAK,CAAT,iBACG;AAAK,oBAAA,SAAS,EAAC,sBAAf;AAAA,8BACKN,OAAO,IAAIyC,YAAY,CAAC,OAAD,CAAvB,gBACG;AACI,sBAAA,SAAS,EAAC,0BADd;AAEI,sBAAA,OAAO,EAAE,MAAM;AACX,4BAAIpD,YAAY,CAACuC,mBAAD,EAAsB,SAAtB,CAAhB,EAAkD;AAClDK,wBAAAA,aAAa,CAAC,OAAD,CAAb;AACH,uBALL;AAAA,6CAOI;AAAA,kCAAI3C,aAAa,CAACsC,mBAAD,EAAsB,SAAtB,EAAiC/B,CAAC,CAAC,aAAD,CAAlC;AAAjB;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,4BADH,gBAWG;AACI,sBAAA,SAAS,EAAC,0BADd;AAEI,sBAAA,OAAO,EAAE,MAAM;AACX,4BAAIR,YAAY,CAACuC,mBAAD,EAAsB,iBAAtB,CAAhB,EAA0D;AAC1DE,wBAAAA,cAAc,CAAC,OAAD,CAAd;AACH,uBALL;AAAA,6CAOI;AAAA,kCAAIxC,aAAa,CAACsC,mBAAD,EAAsB,iBAAtB,EAAyC/B,CAAC,CAAC,SAAD,CAA1C;AAAjB;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA;AAZR;AAAA;AAAA;AAAA;AAAA,0BAlBR,EA2CKS,IAAI,KAAK,CAAT,iBACG;AAAK,oBAAA,SAAS,EAAC,sBAAf;AAAA,8BACKN,OAAO,IAAIyC,YAAY,CAAC,QAAD,CAAvB,gBACG;AACI,sBAAA,SAAS,EAAC,0BADd;AAEI,sBAAA,OAAO,EAAE,MAAM;AACX,4BAAIpD,YAAY,CAACuC,mBAAD,EAAsB,WAAtB,CAAhB,EAAoD;AACpDK,wBAAAA,aAAa,CAAC,SAAD,CAAb;AACH,uBALL;AAAA,6CAOI;AAAA,kCAAI3C,aAAa,CAACsC,mBAAD,EAAsB,WAAtB,EAAmC/B,CAAC,CAAC,eAAD,CAApC;AAAjB;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,4BADH,gBAWG;AACI,sBAAA,SAAS,EAAC,0BADd;AAEI,sBAAA,OAAO,EAAE,MAAM;AACX,4BAAIR,YAAY,CAACuC,mBAAD,EAAsB,mBAAtB,CAAhB,EAA4D;AAC5DE,wBAAAA,cAAc,CAAC,QAAD,CAAd;AACH,uBALL;AAAA,6CAOI;AAAA,kCAAIxC,aAAa,CAACsC,mBAAD,EAAsB,mBAAtB,EAA2C/B,CAAC,CAAC,SAAD,CAA5C;AAAjB;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA;AAZR;AAAA;AAAA;AAAA;AAAA,0BA5CR;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVJ,eAgFI;AAAK,kBAAA,SAAS,EAAC,6BAAf;AAAA,4BACKG,OAAO,KAAM,CAACyC,YAAY,CAAC,OAAD,CAAb,IAA0BnC,IAAI,KAAK,CAApC,IAA2C,CAACmC,YAAY,CAAC,QAAD,CAAb,IAA2BnC,IAAI,KAAK,CAApF,CAAP,iBAAkG;AAAA,8BAAIT,CAAC,CAAC,mBAAD;AAAL;AAAA;AAAA;AAAA;AAAA;AADvG;AAAA;AAAA;AAAA;AAAA,wBAhFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAsFI;AAAK,gBAAA,SAAS,EAAC,iBAAf;AAAA,wCACI;AAAK,kBAAA,SAAS,EAAC,UAAf;AAAA,0CACI;AAAG,oBAAA,SAAS,EAAC,eAAb;AAAA,8BAA8BA,CAAC,CAAC,aAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAG,oBAAA,SAAS,EAAC,gBAAb;AAAA,8BAA+Ba,YAAY,gBAAG,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,4BAAH,gBAA+B;AAAA,iCAAGzB,IAAI,CAAC4D,MAAM,CAACiB,YAAD,CAAP,EAAuB,CAAvB,CAAP;AAAA;AAA1E;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAMI;AAAK,kBAAA,SAAS,EAAC,UAAf;AAAA,0CACI;AAAG,oBAAA,SAAS,EAAC,eAAb;AAAA,8BAA8BjE,CAAC,CAAC,yBAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAG,oBAAA,SAAS,EAAC,gBAAb;AAAA,8BAA+Ba,YAAY,gBAAG,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,4BAAH,gBAA+B;AAAA,iCAAGkC,oBAAH;AAAA;AAA1E;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,EAWKC,MAAM,CAACE,gCAAD,CAAN,GAA2C,CAA3C,iBACG;AAAK,kBAAA,SAAS,EAAC,UAAf;AAAA,0CACI;AAAG,oBAAA,SAAS,EAAC,eAAb;AAAA,8BAA8BlD,CAAC,CAAC,gCAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAG,oBAAA,SAAS,EAAC,gBAAb;AAAA,8BAA+Ba,YAAY,gBAAG,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,4BAAH,gBAA+B;AAAA,iCAAGqC,gCAAH;AAAA;AAA1E;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZR,EAkBKF,MAAM,CAACE,gCAAD,CAAN,GAA2C,CAA3C,iBACG;AAAK,kBAAA,SAAS,EAAC,UAAf;AAAA,0CACI;AAAG,oBAAA,SAAS,EAAC,eAAb;AAAA,8BAA8BlD,CAAC,CAAC,8BAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAG,oBAAA,SAAS,EAAC,gBAAb;AAAA,8BAA+Ba,YAAY,gBAAG,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,4BAAH,gBAA+B;AAAA,sCAAI0C,sBAAJ;AAAA;AAA1E;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAnBR,eAwBI;AAAK,kBAAA,SAAS,EAAC,UAAf;AAAA,0CACI;AAAG,oBAAA,SAAS,EAAC,eAAb;AAAA,8BAA8BvD,CAAC,CAAC,wBAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAG,oBAAA,SAAS,EAAC,gBAAb;AAAA,8BAA+Ba,YAAY,gBAAG,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,4BAAH,gBAA+B;AAAA,iCAAGyC,eAAH;AAAA;AAA1E;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAxBJ,EA6BKN,MAAM,CAACE,gCAAD,CAAN,GAA2C,CAA3C,iBACG;AAAK,kBAAA,SAAS,EAAC,UAAf;AAAA,0CACI;AAAG,oBAAA,SAAS,EAAC,eAAb;AAAA,8BAA8BlD,CAAC,CAAC,iCAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAG,oBAAA,SAAS,EAAC,gBAAb;AAAA,8BAA+Ba,YAAY,gBAAG,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,4BAAH,gBAA+B;AAAA,iCAAG2C,wBAAH;AAAA;AAA1E;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBA9BR,eAoCI;AAAK,kBAAA,SAAS,EAAC,UAAf;AAAA,0CACI;AAAG,oBAAA,SAAS,EAAC,eAAb;AAAA,8BAA8BxD,CAAC,CAAC,uBAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAG,oBAAA,SAAS,EAAC,gBAAb;AAAA,8BAA+Ba,YAAY,gBAAG,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,4BAAH,gBAA+B;AAAA,iCAAGwC,uBAAH;AAAA;AAA1E;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBApCJ,eAyCI;AAAK,kBAAA,SAAS,EAAC,UAAf;AAAA,0CACI;AAAG,oBAAA,SAAS,EAAC,eAAb;AAAA,8BAA8BrD,CAAC,CAAC,sBAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAG,oBAAA,SAAS,EAAC,gBAAb;AAAA,8BAA+Ba,YAAY,gBAAG,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,4BAAH,gBAA+B;AAAA,iCAAGzB,IAAI,CAAC4D,MAAM,CAAChC,WAAD,CAAN,GAAsB,GAAvB,EAA4B,CAA5B,CAAP;AAAA;AAA1E;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAzCJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAtFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVR;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eA8MI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,IAAV;AAAA,6BACI;AAAA,kBACKb,OAAO,iBACJ;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,iBAAhB;AAAkC,YAAA,SAAS,MAA3C;AAA4C,YAAA,SAAS,EAAC,QAAtD;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,4BAAf;AAAA,wCACI;AAAG,kBAAA,SAAS,EAAC,yBAAb;AAAA,4BAAwCH,CAAC,CAAC,aAAD;AAAzC;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAG,kBAAA,SAAS,EAAC,yBAAb;AAAA,4BAAwCa,YAAY,gBAAG,QAAC,QAAD;AAAU,oBAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,0BAAH,gBAA+B;AAAA,8BAAGyD;AAAH;AAAnF;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI;AAAK,cAAA,SAAS,EAAC,iBAAf;AAAA,qCACI;AAAA,uCACI;AAAK,kBAAA,SAAS,EAAC,EAAf;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAC,UAAf;AAAA,4CACI;AAAG,sBAAA,SAAS,EAAC,eAAb;AAAA,gCAA8BtE,CAAC,CAAC,wBAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAG,sBAAA,SAAS,EAAC,gBAAb;AAAA,sCAAgCa,YAAY,gBAAG,QAAC,QAAD;AAAU,wBAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,8BAAH,gBAA+B;AAAA,kCAAG4C;AAAH,uCAA3E;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAMI;AAAK,oBAAA,SAAS,EAAC,UAAf;AAAA,4CACI;AAAG,sBAAA,SAAS,EAAC,eAAb;AAAA,gCAA8BzD,CAAC,CAAC,8BAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAG,sBAAA,SAAS,EAAC,gBAAb;AAAA,sCAAgCa,YAAY,gBAAG,QAAC,QAAD;AAAU,wBAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,8BAAH,gBAA+B;AAAA,kCAAGsD;AAAH,uCAA3E;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BANJ,eAWI;AAAK,oBAAA,SAAS,EAAC,UAAf;AAAA,4CACI;AAAG,sBAAA,SAAS,EAAC,eAAb;AAAA,gCAA8BnE,CAAC,CAAC,mCAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAG,sBAAA,SAAS,EAAC,gBAAb;AAAA,sCAAgCa,YAAY,gBAAG,QAAC,QAAD;AAAU,wBAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,8BAAH,gBAA+B;AAAA,kCAAG0D;AAAH,uCAA3E;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAXJ,eAgBI;AAAK,oBAAA,SAAS,EAAC,UAAf;AAAA,4CACI;AAAG,sBAAA,SAAS,EAAC,eAAb;AAAA,gCAA8BvE,CAAC,CAAC,4CAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAG,sBAAA,SAAS,EAAC,gBAAb;AAAA,sCAAgCa,YAAY,gBAAG,QAAC,QAAD;AAAU,wBAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,8BAAH,gBAA+B;AAAA,kCAAG2D;AAAH,uCAA3E;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAhBJ,EAqBKxB,MAAM,CAACE,gCAAD,CAAN,GAA2C,CAA3C,iBACG;AAAK,oBAAA,SAAS,EAAC,UAAf;AAAA,4CACI;AAAG,sBAAA,SAAS,EAAC,eAAb;AAAA,gCAA8BlD,CAAC,CAAC,qCAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAG,sBAAA,SAAS,EAAC,gBAAb;AAAA,sCAAgCa,YAAY,gBAAG,QAAC,QAAD;AAAU,wBAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,8BAAH,gBAA+B;AAAA,kCAAGuD;AAAH,uCAA3E;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAtBR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA9MJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkQH;;GApYQrE,K;UACSD,c,EAEGhB,W,EACkDS,c,EACvDV,W,EAKSA,W,EACAA,W,EAGDA,W,EAGCA,W,EAGCA,W,EAGCA,W,EAGAA,W,EAGEA,W,EAGHA,W,EAGHA,W,EAGAA,W,EAISA,W;;;KA1CvBkB,K;AAsYT,eAAeA,KAAf","sourcesContent":["import { useState, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid, InputAdornment, OutlinedInput, Zoom } from \"@material-ui/core\";\nimport RebaseTimer from \"../../components/RebaseTimer\";\nimport { trim } from \"../../helpers\";\nimport { changeStake, changeApproval } from \"../../store/slices/stake-thunk\";\nimport \"./stake.scss\";\nimport { useWeb3Context } from \"../../hooks\";\nimport { IPendingTxn, isPendingTxn, txnButtonText } from \"../../store/slices/pending-txns-slice\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { IReduxState } from \"../../store/slices/state.interface\";\nimport { messages } from \"../../constants/messages\";\nimport classnames from \"classnames\";\nimport { warning } from \"../../store/slices/messages-slice\";\nimport { IAppSlice } from \"../../store/slices/app-slice\";\n\nimport { useTranslation } from \"react-i18next\";\n\nfunction Stake() {\n    const { t } = useTranslation();\n\n    const dispatch = useDispatch();\n    const { provider, address, connect, chainID, checkWrongNetwork } = useWeb3Context();\n    const app = useSelector<IReduxState, IAppSlice>(state => state.app);\n\n    const [view, setView] = useState(0);\n    const [quantity, setQuantity] = useState<string>(\"\");\n\n    const isAppLoading = useSelector<IReduxState, boolean>(state => state.app.loading);\n    const currentIndex = useSelector<IReduxState, string>(state => {\n        return state.app.currentIndex;\n    });\n    const fiveDayRate = useSelector<IReduxState, number>(state => {\n        return state.app.fiveDayRate;\n    });\n    const stratBalance = useSelector<IReduxState, string>(state => {\n        return state.account.balances && state.account.balances.strat;\n    });\n    const sstratBalance = useSelector<IReduxState, string>(state => {\n        return state.account.balances && state.account.balances.sstrat;\n    });\n    const wsstratBalance = useSelector<IReduxState, string>(state => {\n        return state.account.balances && state.account.balances.wsstrat;\n    });\n    const stakeAllowance = useSelector<IReduxState, number>(state => {\n        return state.account.staking && state.account.staking.strat;\n    });\n    const unstakeAllowance = useSelector<IReduxState, number>(state => {\n        return state.account.staking && state.account.staking.sstrat;\n    });\n    const stakingRebase = useSelector<IReduxState, number>(state => {\n        return state.app.stakingRebase;\n    });\n    const stakingAPY = useSelector<IReduxState, number>(state => {\n        return state.app.stakingAPY;\n    });\n    const stakingTVL = useSelector<IReduxState, number>(state => {\n        return state.app.stakingTVL;\n    });\n\n    const pendingTransactions = useSelector<IReduxState, IPendingTxn[]>(state => {\n        return state.pendingTransactions;\n    });\n\n    const setMax = () => {\n        if (view === 0) {\n            setQuantity(stratBalance);\n        } else {\n            setQuantity(sstratBalance);\n        }\n    };\n\n    const onSeekApproval = async (token: string) => {\n        if (await checkWrongNetwork()) return;\n\n        await dispatch(changeApproval({ address, token, provider, networkID: chainID }));\n    };\n\n    const onChangeStake = async (action: string) => {\n        if (await checkWrongNetwork()) return;\n        if (quantity === \"\" || parseFloat(quantity) === 0) {\n            dispatch(warning({ text: action === \"stake\" ? messages.before_stake : messages.before_unstake }));\n        } else {\n            await dispatch(changeStake({ address, action, value: String(quantity), provider, networkID: chainID }));\n            setQuantity(\"\");\n        }\n    };\n\n    const hasAllowance = useCallback(\n        token => {\n            if (token === \"strat\") return stakeAllowance > 0;\n            if (token === \"sstrat\") return unstakeAllowance > 0;\n            return 0;\n        },\n        [stakeAllowance],\n    );\n\n    const changeView = (newView: number) => () => {\n        setView(newView);\n        setQuantity(\"\");\n    };\n\n    const trimmedSSTRATBalance = trim(Number(sSTRATBalance), 6);\n    const trimmedWrappedStakedSTRATBalance = trim(Number(wsSTRATBalance), 6);\n    const trimmedStakingAPY = trim(stakingAPY * 100, 1);\n    const stakingRebasePercentage = trim(stakingRebase * 100, 4);\n    const nextRewardValue = trim((Number(stakingRebasePercentage) / 100) * Number(trimmedSSTRATBalance), 6);\n    const wrappedTokenEquivalent = trim(Number(trimmedWrappedStakedSTRATBalance) * Number(currentIndex), 6);\n    const effectiveNextRewardValue = trim(Number(Number(nextRewardValue) + (Number(stakingRebasePercentage) / 100) * Number(wrappedTokenEquivalent)), 6);\n    const valueOfSTRAT = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        maximumFractionDigits: 2,\n        minimumFractionDigits: 2,\n    }).format(Number(STRATBalance) * app.marketPrice);\n    const valueOfStakedBalance = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        maximumFractionDigits: 2,\n        minimumFractionDigits: 2,\n    }).format(Number(trimmedSSTRATBalance) * app.marketPrice);\n    const valueOfWrappedStakedBalance = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        maximumFractionDigits: 2,\n        minimumFractionDigits: 2,\n    }).format(Number(trimmedWrappedStakedSTRATBalance) * Number(currentIndex) * app.marketPrice);\n\n    const sumOfAllBalance = Number(STRATBalance) + Number(trimmedSSTRATBalance) + Number(trimmedWrappedStakedSTRATBalance) * Number(currentIndex);\n    const valueOfAllBalance = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        maximumFractionDigits: 2,\n        minimumFractionDigits: 2,\n    }).format(sumOfAllBalance * app.marketPrice);\n    const valueOfYourNextRewardAmount = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        maximumFractionDigits: 2,\n        minimumFractionDigits: 2,\n    }).format(Number(nextRewardValue) * app.marketPrice);\n    const valueOfYourEffectiveNextRewardAmount = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        maximumFractionDigits: 2,\n        minimumFractionDigits: 2,\n    }).format(Number(effectiveNextRewardValue) * app.marketPrice);\n\n    return (\n        <div className=\"stake-view\">\n            <Zoom in={true}>\n                <div className=\"stake-card\">\n                    <Grid className=\"stake-card-grid\" container direction=\"column\" spacing={2}>\n                        <Grid item>\n                            <div className=\"stake-card-header\">\n                                <p className=\"stake-card-header-title\">{t(\"stake:StakeTitle\")}</p>\n                                <RebaseTimer />\n                            </div>\n                        </Grid>\n\n                        <Grid item>\n                            <div className=\"stake-card-metrics\">\n                                <Grid container spacing={2}>\n                                    <Grid item xs={6} sm={3} md={3} lg={3}>\n                                        <div className=\"stake-card-apy\">\n                                            <p className=\"stake-card-metrics-title\">{t(\"APY\")}</p>\n                                            <p className=\"stake-card-metrics-value\">\n                                                {stakingAPY ? <>{new Intl.NumberFormat(\"en-US\").format(Number(trimmedStakingAPY))}%</> : <Skeleton width=\"150px\" />}\n                                            </p>\n                                        </div>\n                                    </Grid>\n\n                                    <Grid item xs={6} sm={3} md={3} lg={3}>\n                                        <div className=\"stake-card-tvl\">\n                                            <p className=\"stake-card-metrics-title\">{t(\"TVL\")}</p>\n                                            <p className=\"stake-card-metrics-value\">\n                                                {stakingTVL ? (\n                                                    new Intl.NumberFormat(\"en-US\", {\n                                                        style: \"currency\",\n                                                        currency: \"USD\",\n                                                        maximumFractionDigits: 0,\n                                                        minimumFractionDigits: 0,\n                                                    }).format(stakingTVL)\n                                                ) : (\n                                                    <Skeleton width=\"150px\" />\n                                                )}\n                                            </p>\n                                        </div>\n                                    </Grid>\n\n                                    <Grid item xs={6} sm={3} md={3} lg={3}>\n                                        <div className=\"stake-card-index\">\n                                            <p className=\"stake-card-metrics-title\">{t(\"CurrentIndex\")}</p>\n                                            <p className=\"stake-card-metrics-value\">{currentIndex ? <>{trim(Number(currentIndex), 2)} STRAT</> : <Skeleton width=\"150px\" />}</p>\n                                        </div>\n                                    </Grid>\n\n                                    <Grid item xs={6} sm={3} md={3} lg={3}>\n                                        <div className=\"stake-card-index\">\n                                            <p className=\"stake-card-metrics-title\">{t(\"STRATPrice\")}</p>\n                                            <p className=\"stake-card-metrics-value\">{isAppLoading ? <Skeleton width=\"100px\" /> : `$${trim(app.marketPrice, 2)}`}</p>\n                                        </div>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </Grid>\n\n                        <div className=\"stake-card-area\">\n                            {!address && (\n                                <div className=\"stake-card-wallet-notification\">\n                                    <div className=\"stake-card-wallet-connect-btn\" onClick={connect}>\n                                        <p>{t(\"ConnectWallet\")}</p>\n                                    </div>\n                                    <p className=\"stake-card-wallet-desc-text\">{t(\"stake:ConnectYourWalletToStake\")}</p>\n                                </div>\n                            )}\n                            {address && (\n                                <div>\n                                    <div className=\"stake-card-action-area\">\n                                        <div className=\"stake-card-action-stage-btns-wrap\">\n                                            <div onClick={changeView(0)} className={classnames(\"stake-card-action-stage-btn\", { active: !view })}>\n                                                <p>{t(\"stake:Stake\")}</p>\n                                            </div>\n                                            <div onClick={changeView(1)} className={classnames(\"stake-card-action-stage-btn\", { active: view })}>\n                                                <p>{t(\"stake:Unstake\")}</p>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"stake-card-action-row\">\n                                            <OutlinedInput\n                                                type=\"number\"\n                                                placeholder={t(\"Amount\")}\n                                                className=\"stake-card-action-input\"\n                                                value={quantity}\n                                                onChange={e => setQuantity(e.target.value)}\n                                                labelWidth={0}\n                                                endAdornment={\n                                                    <InputAdornment position=\"end\">\n                                                        <div onClick={setMax} className=\"stake-card-action-input-btn\">\n                                                            <p>{t(\"Max\")}</p>\n                                                        </div>\n                                                    </InputAdornment>\n                                                }\n                                            />\n\n                                            {view === 0 && (\n                                                <div className=\"stake-card-tab-panel\">\n                                                    {address && hasAllowance(\"STRAT\") ? (\n                                                        <div\n                                                            className=\"stake-card-tab-panel-btn\"\n                                                            onClick={() => {\n                                                                if (isPendingTxn(pendingTransactions, \"staking\")) return;\n                                                                onChangeStake(\"stake\");\n                                                            }}\n                                                        >\n                                                            <p>{txnButtonText(pendingTransactions, \"staking\", t(\"Stake STRAT\"))}</p>\n                                                        </div>\n                                                    ) : (\n                                                        <div\n                                                            className=\"stake-card-tab-panel-btn\"\n                                                            onClick={() => {\n                                                                if (isPendingTxn(pendingTransactions, \"approve_staking\")) return;\n                                                                onSeekApproval(\"STRAT\");\n                                                            }}\n                                                        >\n                                                            <p>{txnButtonText(pendingTransactions, \"approve_staking\", t(\"Approve\"))}</p>\n                                                        </div>\n                                                    )}\n                                                </div>\n                                            )}\n\n                                            {view === 1 && (\n                                                <div className=\"stake-card-tab-panel\">\n                                                    {address && hasAllowance(\"sSTRAT\") ? (\n                                                        <div\n                                                            className=\"stake-card-tab-panel-btn\"\n                                                            onClick={() => {\n                                                                if (isPendingTxn(pendingTransactions, \"unstaking\")) return;\n                                                                onChangeStake(\"unstake\");\n                                                            }}\n                                                        >\n                                                            <p>{txnButtonText(pendingTransactions, \"unstaking\", t(\"Unstake STRAT\"))}</p>\n                                                        </div>\n                                                    ) : (\n                                                        <div\n                                                            className=\"stake-card-tab-panel-btn\"\n                                                            onClick={() => {\n                                                                if (isPendingTxn(pendingTransactions, \"approve_unstaking\")) return;\n                                                                onSeekApproval(\"sSTRAT\");\n                                                            }}\n                                                        >\n                                                            <p>{txnButtonText(pendingTransactions, \"approve_unstaking\", t(\"Approve\"))}</p>\n                                                        </div>\n                                                    )}\n                                                </div>\n                                            )}\n                                        </div>\n\n                                        <div className=\"stake-card-action-help-text\">\n                                            {address && ((!hasAllowance(\"STRAT\") && view === 0) || (!hasAllowance(\"sSTRAT\") && view === 1)) && <p>{t(\"stake:ApproveNote\")}</p>}\n                                        </div>\n                                    </div>\n\n                                    <div className=\"stake-user-data\">\n                                        <div className=\"data-row\">\n                                            <p className=\"data-row-name\">{t(\"YourBalance\")}</p>\n                                            <p className=\"data-row-value\">{isAppLoading ? <Skeleton width=\"80px\" /> : <>{trim(Number(STRATBalance), 4)} STRAT</>}</p>\n                                        </div>\n\n                                        <div className=\"data-row\">\n                                            <p className=\"data-row-name\">{t(\"stake:YourStakedBalance\")}</p>\n                                            <p className=\"data-row-value\">{isAppLoading ? <Skeleton width=\"80px\" /> : <>{trimmedSSTRATBalance} sSTRAT</>}</p>\n                                        </div>\n\n                                        {Number(trimmedWrappedStakedSTRATBalance) > 0 && (\n                                            <div className=\"data-row\">\n                                                <p className=\"data-row-name\">{t(\"stake:YourWrappedStakedBalance\")}</p>\n                                                <p className=\"data-row-value\">{isAppLoading ? <Skeleton width=\"80px\" /> : <>{trimmedWrappedStakedSTRATBalance} wsSTRAT</>}</p>\n                                            </div>\n                                        )}\n\n                                        {Number(trimmedWrappedStakedSTRATBalance) > 0 && (\n                                            <div className=\"data-row\">\n                                                <p className=\"data-row-name\">{t(\"stake:WrappedTokenEquivalent\")}</p>\n                                                <p className=\"data-row-value\">{isAppLoading ? <Skeleton width=\"80px\" /> : <>({wrappedTokenEquivalent} sSTRAT)</>}</p>\n                                            </div>\n                                        )}\n                                        <div className=\"data-row\">\n                                            <p className=\"data-row-name\">{t(\"stake:NextRewardAmount\")}</p>\n                                            <p className=\"data-row-value\">{isAppLoading ? <Skeleton width=\"80px\" /> : <>{nextRewardValue} STRAT</>}</p>\n                                        </div>\n\n                                        {Number(trimmedWrappedStakedSTRATBalance) > 0 && (\n                                            <div className=\"data-row\">\n                                                <p className=\"data-row-name\">{t(\"stake:EffectiveNextRewardAmount\")}</p>\n                                                <p className=\"data-row-value\">{isAppLoading ? <Skeleton width=\"80px\" /> : <>{effectiveNextRewardValue} STRAT</>}</p>\n                                            </div>\n                                        )}\n\n                                        <div className=\"data-row\">\n                                            <p className=\"data-row-name\">{t(\"stake:NextRewardYield\")}</p>\n                                            <p className=\"data-row-value\">{isAppLoading ? <Skeleton width=\"80px\" /> : <>{stakingRebasePercentage}%</>}</p>\n                                        </div>\n\n                                        <div className=\"data-row\">\n                                            <p className=\"data-row-name\">{t(\"stake:ROIFiveDayRate\")}</p>\n                                            <p className=\"data-row-value\">{isAppLoading ? <Skeleton width=\"80px\" /> : <>{trim(Number(fiveDayRate) * 100, 4)}%</>}</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </Grid>\n                </div>\n            </Zoom>\n            <Zoom in={true}>\n                <div>\n                    {address && (\n                        <div className=\"stake-card\">\n                            <Grid className=\"stake-card-grid\" container direction=\"column\">\n                                <Grid item>\n                                    <div className=\"stake-card-header data-row\">\n                                        <p className=\"stake-card-header-title\">{t(\"YourBalance\")}</p>\n                                        <p className=\"stake-card-header-title\">{isAppLoading ? <Skeleton width=\"80px\" /> : <>{valueOfAllBalance}</>}</p>\n                                    </div>\n                                </Grid>\n\n                                <div className=\"stake-card-area\">\n                                    <div>\n                                        <div className=\"\">\n                                            <div className=\"data-row\">\n                                                <p className=\"data-row-name\">{t(\"stake:ValueOfYourSTRAT\")}</p>\n                                                <p className=\"data-row-value\"> {isAppLoading ? <Skeleton width=\"80px\" /> : <>{valueOfSTRAT}</>}</p>\n                                            </div>\n\n                                            <div className=\"data-row\">\n                                                <p className=\"data-row-name\">{t(\"stake:ValueOfYourStakedSTRAT\")}</p>\n                                                <p className=\"data-row-value\"> {isAppLoading ? <Skeleton width=\"80px\" /> : <>{valueOfStakedBalance}</>}</p>\n                                            </div>\n\n                                            <div className=\"data-row\">\n                                                <p className=\"data-row-name\">{t(\"stake:ValueOfYourNextRewardAmount\")}</p>\n                                                <p className=\"data-row-value\"> {isAppLoading ? <Skeleton width=\"80px\" /> : <>{valueOfYourNextRewardAmount}</>}</p>\n                                            </div>\n\n                                            <div className=\"data-row\">\n                                                <p className=\"data-row-name\">{t(\"stake:ValueOfYourEffectiveNextRewardAmount\")}</p>\n                                                <p className=\"data-row-value\"> {isAppLoading ? <Skeleton width=\"80px\" /> : <>{valueOfYourEffectiveNextRewardAmount}</>}</p>\n                                            </div>\n\n                                            {Number(trimmedWrappedStakedSTRATBalance) > 0 && (\n                                                <div className=\"data-row\">\n                                                    <p className=\"data-row-name\">{t(\"stake:ValueOfYourWrappedStakedSTRAT\")}</p>\n                                                    <p className=\"data-row-value\"> {isAppLoading ? <Skeleton width=\"80px\" /> : <>{valueOfWrappedStakedBalance}</>}</p>\n                                                </div>\n                                            )}\n                                        </div>\n                                    </div>\n                                </div>\n                            </Grid>\n                        </div>\n                    )}\n                </div>\n            </Zoom>\n        </div>\n    );\n}\n\nexport default Stake;\n"]},"metadata":{},"sourceType":"module"}