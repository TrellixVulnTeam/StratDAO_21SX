{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport accountReducer from \"./slices/account-slice\";\nimport bondingReducer from \"./slices/bond-slice\";\nimport appReducer from \"./slices/app-slice\";\nimport pendingTransactionsReducer from \"./slices/pending-txns-slice\";\nimport messagesReducer from \"./slices/messages-slice\";\nconst store = configureStore({\n  reducer: {\n    account: accountReducer,\n    bonding: bondingReducer,\n    app: appReducer,\n    pendingTransactions: pendingTransactionsReducer,\n    messages: messagesReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  })\n});\nexport default store;","map":{"version":3,"sources":["/Users/anthonymann/Desktop/Snowbank DAO/snowbank-frontend/src/store/store.ts"],"names":["configureStore","accountReducer","bondingReducer","appReducer","pendingTransactionsReducer","messagesReducer","store","reducer","account","bonding","app","pendingTransactions","messages","middleware","getDefaultMiddleware","serializableCheck"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AAEA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,0BAAP,MAAuC,6BAAvC;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AAEA,MAAMC,KAAK,GAAGN,cAAc,CAAC;AACzBO,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAEP,cADJ;AAELQ,IAAAA,OAAO,EAAEP,cAFJ;AAGLQ,IAAAA,GAAG,EAAEP,UAHA;AAILQ,IAAAA,mBAAmB,EAAEP,0BAJhB;AAKLQ,IAAAA,QAAQ,EAAEP;AALL,GADgB;AAQzBQ,EAAAA,UAAU,EAAEC,oBAAoB,IAAIA,oBAAoB,CAAC;AAAEC,IAAAA,iBAAiB,EAAE;AAArB,GAAD;AAR/B,CAAD,CAA5B;AAaA,eAAeT,KAAf","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\n\nimport accountReducer from \"./slices/account-slice\";\nimport bondingReducer from \"./slices/bond-slice\";\nimport appReducer from \"./slices/app-slice\";\nimport pendingTransactionsReducer from \"./slices/pending-txns-slice\";\nimport messagesReducer from \"./slices/messages-slice\";\n\nconst store = configureStore({\n    reducer: {\n        account: accountReducer,\n        bonding: bondingReducer,\n        app: appReducer,\n        pendingTransactions: pendingTransactionsReducer,\n        messages: messagesReducer,\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware({ serializableCheck: false }),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport default store;\n"]},"metadata":{},"sourceType":"module"}