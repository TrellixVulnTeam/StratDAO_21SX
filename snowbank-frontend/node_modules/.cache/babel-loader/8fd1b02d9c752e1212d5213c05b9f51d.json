{"ast":null,"code":"var _jsxFileName = \"/Users/anthonymann/Desktop/Snowbank DAO/snowbank-frontend/src/views/Dashboard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport { Grid, Zoom } from \"@material-ui/core\";\nimport { trim } from \"../../helpers\";\nimport \"./dashboard.scss\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const isAppLoading = useSelector(state => state.app.loading);\n  const app = useSelector(state => state.app);\n  const trimmedStakingAPY = trim(app.stakingAPY * 100, 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-view\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-infos-wrap\",\n      children: /*#__PURE__*/_jsxDEV(Zoom, {\n        in: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 6,\n            md: 6,\n            sm: 6,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title\",\n                children: t(\"RiskFreeValue\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-value\",\n                children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                  width: \"250px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 41\n                }, this) : new Intl.NumberFormat(\"en-US\", {\n                  style: \"currency\",\n                  currency: \"USD\",\n                  maximumFractionDigits: 2,\n                  minimumFractionDigits: 2\n                }).format(app.rfv)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 6,\n            md: 6,\n            sm: 6,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title\",\n                children: t(\"SBPrice\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-value\",\n                children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                  width: \"100px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 75\n                }, this) : `$${trim(app.marketPrice, 2)}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 6,\n            md: 6,\n            sm: 6,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title\",\n                children: t(\"MarketCap\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-value\",\n                children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                  width: \"160px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 41\n                }, this) : new Intl.NumberFormat(\"en-US\", {\n                  style: \"currency\",\n                  currency: \"USD\",\n                  maximumFractionDigits: 0,\n                  minimumFractionDigits: 0\n                }).format(app.marketCap)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 6,\n            md: 6,\n            sm: 6,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title\",\n                children: t(\"TVL\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-value\",\n                children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                  width: \"250px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 41\n                }, this) : new Intl.NumberFormat(\"en-US\", {\n                  style: \"currency\",\n                  currency: \"USD\",\n                  maximumFractionDigits: 0,\n                  minimumFractionDigits: 0\n                }).format(app.stakingTVL)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 6,\n            md: 6,\n            sm: 6,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title\",\n                children: t(\"APY\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-value\",\n                children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                  width: \"250px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 75\n                }, this) : `${new Intl.NumberFormat(\"en-US\").format(Number(trimmedStakingAPY))}%`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 6,\n            md: 6,\n            sm: 6,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title\",\n                children: t(\"CurrentIndex\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-value\",\n                children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                  width: \"250px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 75\n                }, this) : `${trim(Number(app.currentIndex), 2)} SB`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 6,\n            md: 6,\n            sm: 6,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title\",\n                children: t(\"TreasuryBalance\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-value\",\n                children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                  width: \"250px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 41\n                }, this) : new Intl.NumberFormat(\"en-US\", {\n                  style: \"currency\",\n                  currency: \"USD\",\n                  maximumFractionDigits: 0,\n                  minimumFractionDigits: 0\n                }).format(app.treasuryBalance)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 6,\n            md: 6,\n            sm: 6,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title\",\n                children: t(\"Runway\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-value\",\n                children: isAppLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                  width: \"250px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 75\n                }, this) : `${trim(Number(app.runway), 1)} Days`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboard, \"nx68V3Da9UxYqfbMRUTNLTm+gXQ=\", false, function () {\n  return [useTranslation, useSelector, useSelector];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/anthonymann/Desktop/Snowbank DAO/snowbank-frontend/src/views/Dashboard/index.tsx"],"names":["useSelector","Grid","Zoom","trim","Skeleton","useTranslation","Dashboard","t","isAppLoading","state","app","loading","trimmedStakingAPY","stakingAPY","Intl","NumberFormat","style","currency","maximumFractionDigits","minimumFractionDigits","format","rfv","marketPrice","marketCap","stakingTVL","Number","currentIndex","treasuryBalance","runway"],"mappings":"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","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { Grid, Zoom } from \"@material-ui/core\";\nimport { trim } from \"../../helpers\";\nimport \"./dashboard.scss\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { IReduxState } from \"../../store/slices/state.interface\";\nimport { IAppSlice } from \"../../store/slices/app-slice\";\n\nimport { useTranslation } from \"react-i18next\";\n\nfunction Dashboard() {\n    const { t } = useTranslation();\n\n    const isAppLoading = useSelector<IReduxState, boolean>(state => state.app.loading);\n    const app = useSelector<IReduxState, IAppSlice>(state => state.app);\n\n    const trimmedStakingAPY = trim(app.stakingAPY * 100, 1);\n\n    return (\n        <div className=\"dashboard-view\">\n            <div className=\"dashboard-infos-wrap\">\n                <Zoom in={true}>\n                    <Grid container spacing={4}>\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">{t(\"RiskFreeValue\")}</p>\n                                <p className=\"card-value\">\n                                    {isAppLoading ? (\n                                        <Skeleton width=\"250px\" />\n                                    ) : (\n                                        new Intl.NumberFormat(\"en-US\", {\n                                            style: \"currency\",\n                                            currency: \"USD\",\n                                            maximumFractionDigits: 2,\n                                            minimumFractionDigits: 2,\n                                        }).format(app.rfv)\n                                    )}\n                                </p>\n                                {/* <p className=\"card-value\">\n                                    {isAppLoading ? (\n                                        <Skeleton width=\"250px\" />\n                                    ) : (\n                                        new Intl.NumberFormat(\"en-US\", {\n                                            style: \"currency\",\n                                            currency: \"USD\",\n                                            maximumFractionDigits: 2,\n                                            minimumFractionDigits: 2,\n                                        }).format(app.redeemRfv)\n                                    )}\n                                </p> */}\n                            </div>\n                        </Grid>\n                        {/* <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">{t(\"RiskFreeValueDelta\")}</p>\n                                <p className=\"card-value\">{isAppLoading ? <Skeleton width=\"250px\" /> : `${trim(Number(app.deltaMarketPriceRfv), 2)}%`}</p>\n                            </div>\n                        </Grid> */}\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">{t(\"SBPrice\")}</p>\n                                <p className=\"card-value\">{isAppLoading ? <Skeleton width=\"100px\" /> : `$${trim(app.marketPrice, 2)}`}</p>\n                            </div>\n                        </Grid>\n\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">{t(\"MarketCap\")}</p>\n                                <p className=\"card-value\">\n                                    {isAppLoading ? (\n                                        <Skeleton width=\"160px\" />\n                                    ) : (\n                                        new Intl.NumberFormat(\"en-US\", {\n                                            style: \"currency\",\n                                            currency: \"USD\",\n                                            maximumFractionDigits: 0,\n                                            minimumFractionDigits: 0,\n                                        }).format(app.marketCap)\n                                    )}\n                                </p>\n                            </div>\n                        </Grid>\n\n                        {/* <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">{t(\"SupplyStakedTotal\")}</p>\n                                <p className=\"card-value\">\n                                    {isAppLoading ? (\n                                        <Skeleton width=\"250px\" />\n                                    ) : (\n                                        `${new Intl.NumberFormat(\"en-US\", {\n                                            maximumFractionDigits: 0,\n                                            minimumFractionDigits: 0,\n                                        }).format(app.circSupply)}\n                                        /\n                                        ${new Intl.NumberFormat(\"en-US\", {\n                                            maximumFractionDigits: 0,\n                                            minimumFractionDigits: 0,\n                                        }).format(app.totalSupply)}`\n                                    )}\n                                </p>\n                            </div>\n                        </Grid> */}\n\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">{t(\"TVL\")}</p>\n                                <p className=\"card-value\">\n                                    {isAppLoading ? (\n                                        <Skeleton width=\"250px\" />\n                                    ) : (\n                                        new Intl.NumberFormat(\"en-US\", {\n                                            style: \"currency\",\n                                            currency: \"USD\",\n                                            maximumFractionDigits: 0,\n                                            minimumFractionDigits: 0,\n                                        }).format(app.stakingTVL)\n                                    )}\n                                </p>\n                            </div>\n                        </Grid>\n\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">{t(\"APY\")}</p>\n                                <p className=\"card-value\">{isAppLoading ? <Skeleton width=\"250px\" /> : `${new Intl.NumberFormat(\"en-US\").format(Number(trimmedStakingAPY))}%`}</p>\n                            </div>\n                        </Grid>\n\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">{t(\"CurrentIndex\")}</p>\n                                <p className=\"card-value\">{isAppLoading ? <Skeleton width=\"250px\" /> : `${trim(Number(app.currentIndex), 2)} SB`}</p>\n                            </div>\n                        </Grid>\n\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">{t(\"TreasuryBalance\")}</p>\n                                <p className=\"card-value\">\n                                    {isAppLoading ? (\n                                        <Skeleton width=\"250px\" />\n                                    ) : (\n                                        new Intl.NumberFormat(\"en-US\", {\n                                            style: \"currency\",\n                                            currency: \"USD\",\n                                            maximumFractionDigits: 0,\n                                            minimumFractionDigits: 0,\n                                        }).format(app.treasuryBalance)\n                                    )}\n                                </p>\n                            </div>\n                        </Grid>\n\n                        {/* <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">{t(\"BackingPerSB\")}</p>\n                                <p className=\"card-value\">\n                                    {isAppLoading ? (\n                                        <Skeleton width=\"250px\" />\n                                    ) : (\n                                        new Intl.NumberFormat(\"en-US\", {\n                                            style: \"currency\",\n                                            currency: \"USD\",\n                                            maximumFractionDigits: 0,\n                                            minimumFractionDigits: 0,\n                                        }).format(app.rfv)\n                                    )}\n                                </p>\n                            </div>\n                        </Grid> */}\n\n                        <Grid item lg={6} md={6} sm={6} xs={12}>\n                            <div className=\"dashboard-card\">\n                                <p className=\"card-title\">{t(\"Runway\")}</p>\n                                <p className=\"card-value\">{isAppLoading ? <Skeleton width=\"250px\" /> : `${trim(Number(app.runway), 1)} Days`}</p>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Zoom>\n            </div>\n        </div>\n    );\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}