{"ast":null,"code":"var _jsxFileName = \"/Users/anthonymann/Desktop/Snowbank DAO/snowbank-frontend/src/views/Bond/BondPurchase.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Box, OutlinedInput, InputAdornment, Slide, FormControl } from \"@material-ui/core\";\nimport { shorten, trim, prettifySeconds } from \"../../helpers\";\nimport { changeApproval, bondAsset, calcBondDetails } from \"../../store/slices/bond-slice\";\nimport { useWeb3Context } from \"../../hooks\";\nimport { isPendingTxn, txnButtonText } from \"../../store/slices/pending-txns-slice\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport useDebounce from \"../../hooks/debounce\";\nimport { messages } from \"../../constants/messages\";\nimport { warning } from \"../../store/slices/messages-slice\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction BondPurchase(_ref) {\n  _s();\n\n  let {\n    bond,\n    slippage,\n    recipientAddress\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useDispatch();\n  const {\n    provider,\n    address,\n    chainID,\n    checkWrongNetwork\n  } = useWeb3Context();\n  const [quantity, setQuantity] = useState(\"\");\n  const [useAvax, setUseAvax] = useState(false);\n  const isBondLoading = useSelector(state => {\n    var _state$bonding$loadin;\n\n    return (_state$bonding$loadin = state.bonding.loading) !== null && _state$bonding$loadin !== void 0 ? _state$bonding$loadin : true;\n  });\n  const [zapinOpen, setZapinOpen] = useState(false);\n  const pendingTransactions = useSelector(state => {\n    return state.pendingTransactions;\n  });\n\n  const vestingPeriod = () => {\n    return prettifySeconds(bond.vestingTerm, \"day\");\n  };\n\n  async function onBond() {\n    if (await checkWrongNetwork()) return;\n\n    if (quantity === \"\") {\n      dispatch(warning({\n        text: messages.before_minting\n      })); //@ts-ignore\n    } else if (isNaN(quantity)) {\n      dispatch(warning({\n        text: messages.before_minting\n      }));\n    } else if (bond.interestDue > 0 || bond.pendingPayout > 0) {\n      const shouldProceed = window.confirm(messages.existing_mint);\n\n      if (shouldProceed) {\n        const trimBalance = trim(Number(quantity), 10);\n        await dispatch(bondAsset({\n          value: trimBalance,\n          slippage,\n          bond,\n          networkID: chainID,\n          provider,\n          address: recipientAddress || address,\n          useAvax\n        }));\n        clearInput();\n      }\n    } else {\n      const trimBalance = trim(Number(quantity), 10);\n      await dispatch( //@ts-ignore\n      bondAsset({\n        value: trimBalance,\n        slippage,\n        bond,\n        networkID: chainID,\n        provider,\n        address: recipientAddress || address,\n        useAvax\n      }));\n      clearInput();\n    }\n  }\n\n  const clearInput = () => {\n    setQuantity(\"\");\n  };\n\n  const hasAllowance = useCallback(() => {\n    return bond.allowance > 0;\n  }, [bond.allowance]);\n\n  const setMax = () => {\n    let amount = Math.min(bond.maxBondPriceToken * 0.9999, useAvax ? bond.avaxBalance * 0.99 : bond.balance);\n\n    if (amount) {\n      amount = trim(amount);\n    }\n\n    setQuantity((amount || \"\").toString());\n  };\n\n  const bondDetailsDebounce = useDebounce(quantity, 1000);\n  useEffect(() => {\n    dispatch(calcBondDetails({\n      bond,\n      value: quantity,\n      provider,\n      networkID: chainID\n    }));\n  }, [bondDetailsDebounce]);\n\n  const onSeekApproval = async () => {\n    if (await checkWrongNetwork()) return;\n    dispatch(changeApproval({\n      address,\n      bond,\n      provider,\n      networkID: chainID\n    }));\n  };\n\n  const handleZapinOpen = () => {\n    dispatch(calcBondDetails({\n      bond,\n      value: \"0\",\n      provider,\n      networkID: chainID\n    }));\n    setZapinOpen(true);\n  };\n\n  const handleZapinClose = () => {\n    dispatch(calcBondDetails({\n      bond,\n      value: quantity,\n      provider,\n      networkID: chainID\n    }));\n    setZapinOpen(false);\n  };\n\n  const displayUnits = useAvax ? \"AVAX\" : bond.displayUnits;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-around\",\n      flexWrap: \"wrap\",\n      children: [bond.name === \"wavax\" && /*#__PURE__*/_jsxDEV(FormControl, {\n        className: \"ohm-input\",\n        variant: \"outlined\",\n        color: \"primary\",\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avax-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: useAvax,\n            onClick: () => setUseAvax(!useAvax)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: t(\"bond:UseAvax\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: \"bond-input-wrap\",\n        variant: \"outlined\",\n        color: \"primary\",\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          placeholder: t(\"Amount\"),\n          type: \"number\",\n          value: quantity,\n          onChange: e => setQuantity(e.target.value),\n          labelWidth: 0,\n          className: \"bond-input\",\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stake-input-btn\",\n              onClick: setMax,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: t(\"Max\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), hasAllowance() || useAvax ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction-button bond-approve-btn\",\n        onClick: async () => {\n          if (isPendingTxn(pendingTransactions, \"bond_\" + bond.name)) return;\n          await onBond();\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: txnButtonText(pendingTransactions, \"bond_\" + bond.name, t(\"bond:Mint\"))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction-button bond-approve-btn\",\n        onClick: async () => {\n          if (isPendingTxn(pendingTransactions, \"approve_\" + bond.name)) return;\n          await onSeekApproval();\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: txnButtonText(pendingTransactions, \"approve_\" + bond.name, t(\"Approve\"))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this), !hasAllowance() && !useAvax && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"help-text\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"help-text-desc\",\n          children: t(\"bond:ApproveHelpText\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Slide, {\n      direction: \"left\",\n      in: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      timeout: 533,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"bond-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bond-balance-title\",\n            children: t(\"YourBalance\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bond-balance-title\",\n            children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"100px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [trim(useAvax ? bond.avaxBalance : bond.balance, 4), \" \", displayUnits]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bond-balance-title\",\n            children: t(\"bond:YouWillGet\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"price-data bond-balance-title\",\n            children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"100px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 87\n            }, this) : `${trim(bond.bondQuote, 4)} SB`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `data-row`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bond-balance-title\",\n            children: t(\"bond:MaxYouCanBuy\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"price-data bond-balance-title\",\n            children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"100px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 87\n            }, this) : `${trim(bond.maxBondPrice, 4)} SB`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bond-balance-title\",\n            children: t(\"ROI\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bond-balance-title\",\n            children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"100px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 76\n            }, this) : `${trim(bond.bondDiscount * 100, 2)}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bond-balance-title\",\n            children: t(\"bond:VestingTerm\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bond-balance-title\",\n            children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"100px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 76\n            }, this) : vestingPeriod()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bond-balance-title\",\n            children: t(\"bond:MinimumPurchase\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bond-balance-title\",\n            children: \"0.01 SB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), recipientAddress !== address && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bond-balance-title\",\n            children: t(\"bond:Recipient\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bond-balance-title\",\n            children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"100px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 80\n            }, this) : shorten(recipientAddress)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BondPurchase, \"3lBgO6cgR7NCTDukeVAbhEQ/sC4=\", false, function () {\n  return [useTranslation, useDispatch, useWeb3Context, useSelector, useSelector, useDebounce];\n});\n\n_c = BondPurchase;\nexport default BondPurchase;\n\nvar _c;\n\n$RefreshReg$(_c, \"BondPurchase\");","map":{"version":3,"sources":["/Users/anthonymann/Desktop/Snowbank DAO/snowbank-frontend/src/views/Bond/BondPurchase.tsx"],"names":["useState","useEffect","useCallback","useSelector","useDispatch","Box","OutlinedInput","InputAdornment","Slide","FormControl","shorten","trim","prettifySeconds","changeApproval","bondAsset","calcBondDetails","useWeb3Context","isPendingTxn","txnButtonText","Skeleton","useDebounce","messages","warning","useTranslation","BondPurchase","bond","slippage","recipientAddress","t","dispatch","provider","address","chainID","checkWrongNetwork","quantity","setQuantity","useAvax","setUseAvax","isBondLoading","state","bonding","loading","zapinOpen","setZapinOpen","pendingTransactions","vestingPeriod","vestingTerm","onBond","text","before_minting","isNaN","interestDue","pendingPayout","shouldProceed","window","confirm","existing_mint","trimBalance","Number","value","networkID","clearInput","hasAllowance","allowance","setMax","amount","Math","min","maxBondPriceToken","avaxBalance","balance","toString","bondDetailsDebounce","onSeekApproval","handleZapinOpen","handleZapinClose","displayUnits","name","e","target","timeout","bondQuote","maxBondPrice","bondDiscount"],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Box, OutlinedInput, InputAdornment, Slide, FormControl } from \"@material-ui/core\";\nimport { shorten, trim, prettifySeconds } from \"../../helpers\";\nimport { changeApproval, bondAsset, calcBondDetails } from \"../../store/slices/bond-slice\";\nimport { useWeb3Context } from \"../../hooks\";\nimport { IPendingTxn, isPendingTxn, txnButtonText } from \"../../store/slices/pending-txns-slice\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { IReduxState } from \"../../store/slices/state.interface\";\nimport { IAllBondData } from \"../../hooks/bonds\";\nimport useDebounce from \"../../hooks/debounce\";\nimport { messages } from \"../../constants/messages\";\nimport { warning } from \"../../store/slices/messages-slice\";\nimport Zapin from \"./Zapin\";\n\nimport { useTranslation } from \"react-i18next\";\n\ninterface IBondPurchaseProps {\n    bond: IAllBondData;\n    slippage: number;\n    recipientAddress: string;\n}\n\nfunction BondPurchase({ bond, slippage, recipientAddress }: IBondPurchaseProps) {\n    const { t } = useTranslation();\n\n    const dispatch = useDispatch();\n    const { provider, address, chainID, checkWrongNetwork } = useWeb3Context();\n\n    const [quantity, setQuantity] = useState(\"\");\n    const [useAvax, setUseAvax] = useState(false);\n\n    const isBondLoading = useSelector<IReduxState, boolean>(state => state.bonding.loading ?? true);\n    const [zapinOpen, setZapinOpen] = useState(false);\n\n    const pendingTransactions = useSelector<IReduxState, IPendingTxn[]>(state => {\n        return state.pendingTransactions;\n    });\n\n    const vestingPeriod = () => {\n        return prettifySeconds(bond.vestingTerm, \"day\");\n    };\n\n    async function onBond() {\n        if (await checkWrongNetwork()) return;\n\n        if (quantity === \"\") {\n            dispatch(warning({ text: messages.before_minting }));\n            //@ts-ignore\n        } else if (isNaN(quantity)) {\n            dispatch(warning({ text: messages.before_minting }));\n        } else if (bond.interestDue > 0 || bond.pendingPayout > 0) {\n            const shouldProceed = window.confirm(messages.existing_mint);\n            if (shouldProceed) {\n                const trimBalance = trim(Number(quantity), 10);\n\n                await dispatch(\n                    bondAsset({\n                        value: trimBalance,\n                        slippage,\n                        bond,\n                        networkID: chainID,\n                        provider,\n                        address: recipientAddress || address,\n                        useAvax,\n                    }),\n                );\n                clearInput();\n            }\n        } else {\n            const trimBalance = trim(Number(quantity), 10);\n            await dispatch(\n                //@ts-ignore\n                bondAsset({\n                    value: trimBalance,\n                    slippage,\n                    bond,\n                    networkID: chainID,\n                    provider,\n                    address: recipientAddress || address,\n                    useAvax,\n                }),\n            );\n            clearInput();\n        }\n    }\n\n    const clearInput = () => {\n        setQuantity(\"\");\n    };\n\n    const hasAllowance = useCallback(() => {\n        return bond.allowance > 0;\n    }, [bond.allowance]);\n\n    const setMax = () => {\n        let amount: any = Math.min(bond.maxBondPriceToken * 0.9999, useAvax ? bond.avaxBalance * 0.99 : bond.balance);\n\n        if (amount) {\n            amount = trim(amount);\n        }\n\n        setQuantity((amount || \"\").toString());\n    };\n\n    const bondDetailsDebounce = useDebounce(quantity, 1000);\n\n    useEffect(() => {\n        dispatch(calcBondDetails({ bond, value: quantity, provider, networkID: chainID }));\n    }, [bondDetailsDebounce]);\n\n    const onSeekApproval = async () => {\n        if (await checkWrongNetwork()) return;\n\n        dispatch(changeApproval({ address, bond, provider, networkID: chainID }));\n    };\n\n    const handleZapinOpen = () => {\n        dispatch(calcBondDetails({ bond, value: \"0\", provider, networkID: chainID }));\n        setZapinOpen(true);\n    };\n\n    const handleZapinClose = () => {\n        dispatch(calcBondDetails({ bond, value: quantity, provider, networkID: chainID }));\n        setZapinOpen(false);\n    };\n\n    const displayUnits = useAvax ? \"AVAX\" : bond.displayUnits;\n\n    return (\n        <Box display=\"flex\" flexDirection=\"column\">\n            <Box display=\"flex\" justifyContent=\"space-around\" flexWrap=\"wrap\">\n                {bond.name === \"wavax\" && (\n                    <FormControl className=\"ohm-input\" variant=\"outlined\" color=\"primary\" fullWidth>\n                        <div className=\"avax-checkbox\">\n                            <input type=\"checkbox\" checked={useAvax} onClick={() => setUseAvax(!useAvax)} />\n                            <p>{t(\"bond:UseAvax\")}</p>\n                        </div>\n                    </FormControl>\n                )}\n                <FormControl className=\"bond-input-wrap\" variant=\"outlined\" color=\"primary\" fullWidth>\n                    <OutlinedInput\n                        placeholder={t(\"Amount\")}\n                        type=\"number\"\n                        value={quantity}\n                        onChange={e => setQuantity(e.target.value)}\n                        labelWidth={0}\n                        className=\"bond-input\"\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <div className=\"stake-input-btn\" onClick={setMax}>\n                                    <p>{t(\"Max\")}</p>\n                                </div>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n                {hasAllowance() || useAvax ? (\n                    <div\n                        className=\"transaction-button bond-approve-btn\"\n                        onClick={async () => {\n                            if (isPendingTxn(pendingTransactions, \"bond_\" + bond.name)) return;\n                            await onBond();\n                        }}\n                    >\n                        <p>{txnButtonText(pendingTransactions, \"bond_\" + bond.name, t(\"bond:Mint\"))}</p>\n                    </div>\n                ) : (\n                    <div\n                        className=\"transaction-button bond-approve-btn\"\n                        onClick={async () => {\n                            if (isPendingTxn(pendingTransactions, \"approve_\" + bond.name)) return;\n                            await onSeekApproval();\n                        }}\n                    >\n                        <p>{txnButtonText(pendingTransactions, \"approve_\" + bond.name, t(\"Approve\"))}</p>\n                    </div>\n                )}\n\n                {/* \n                <div className=\"transaction-button bond-approve-btn\" onClick={handleZapinOpen}>\n                    <p>Zap</p>\n                </div>\n                */}\n\n                {!hasAllowance() && !useAvax && (\n                    <div className=\"help-text\">\n                        <p className=\"help-text-desc\">{t(\"bond:ApproveHelpText\")}</p>\n                    </div>\n                )}\n            </Box>\n\n            <Slide direction=\"left\" in={true} mountOnEnter unmountOnExit {...{ timeout: 533 }}>\n                <Box className=\"bond-data\">\n                    <div className=\"data-row\">\n                        <p className=\"bond-balance-title\">{t(\"YourBalance\")}</p>\n                        <p className=\"bond-balance-title\">\n                            {isBondLoading ? (\n                                <Skeleton width=\"100px\" />\n                            ) : (\n                                <>\n                                    {trim(useAvax ? bond.avaxBalance : bond.balance, 4)} {displayUnits}\n                                </>\n                            )}\n                        </p>\n                    </div>\n\n                    <div className=\"data-row\">\n                        <p className=\"bond-balance-title\">{t(\"bond:YouWillGet\")}</p>\n                        <p className=\"price-data bond-balance-title\">{isBondLoading ? <Skeleton width=\"100px\" /> : `${trim(bond.bondQuote, 4)} SB`}</p>\n                    </div>\n\n                    <div className={`data-row`}>\n                        <p className=\"bond-balance-title\">{t(\"bond:MaxYouCanBuy\")}</p>\n                        <p className=\"price-data bond-balance-title\">{isBondLoading ? <Skeleton width=\"100px\" /> : `${trim(bond.maxBondPrice, 4)} SB`}</p>\n                    </div>\n\n                    <div className=\"data-row\">\n                        <p className=\"bond-balance-title\">{t(\"ROI\")}</p>\n                        <p className=\"bond-balance-title\">{isBondLoading ? <Skeleton width=\"100px\" /> : `${trim(bond.bondDiscount * 100, 2)}%`}</p>\n                    </div>\n\n                    <div className=\"data-row\">\n                        <p className=\"bond-balance-title\">{t(\"bond:VestingTerm\")}</p>\n                        <p className=\"bond-balance-title\">{isBondLoading ? <Skeleton width=\"100px\" /> : vestingPeriod()}</p>\n                    </div>\n\n                    <div className=\"data-row\">\n                        <p className=\"bond-balance-title\">{t(\"bond:MinimumPurchase\")}</p>\n                        <p className=\"bond-balance-title\">0.01 SB</p>\n                    </div>\n\n                    {recipientAddress !== address && (\n                        <div className=\"data-row\">\n                            <p className=\"bond-balance-title\">{t(\"bond:Recipient\")}</p>\n                            <p className=\"bond-balance-title\">{isBondLoading ? <Skeleton width=\"100px\" /> : shorten(recipientAddress)}</p>\n                        </div>\n                    )}\n                </Box>\n            </Slide>\n            {/* <Zapin open={zapinOpen} handleClose={handleZapinClose} bond={bond} /> */}\n        </Box>\n    );\n}\n\nexport default BondPurchase;\n"]},"metadata":{},"sourceType":"module"}