{"ast":null,"code":"import { error } from \"../store/slices/messages-slice\";\nimport { messages } from \"../constants/messages\";\nimport i18n from \"../i18n\";\nexport const metamaskErrorWrap = (err, dispatch) => {\n  let text = messages.something_wrong;\n\n  if (err.code && err.code === -32603) {\n    if (err.message.indexOf(\"ds-math-sub-underflow\") >= 0) {\n      text = i18n.t(\"messages.BondMoreThanYourBalance\") + \" Error code: 32603. Message: ds-math-sub-underflow\";\n    }\n\n    if (err.data && err.data.message) {\n      text = err.data.message.includes(\":\") ? err.data.message.split(\":\")[1].trim() : err.data.data || err.data.message;\n    }\n\n    if (err.data && err.data.message && err.data.message.includes(\"gas required exceeds allowance\")) {\n      text = i18n.t(\"messages.InsufficientBalance\");\n    }\n\n    if (err.data && err.data.message && err.data.message.includes(\"Bond too small\")) {\n      text = i18n.t(\"messages.BondTooSmall\");\n    }\n  }\n\n  if (err.code && err.code === 4001) {\n    if (err.message.includes(\"User denied transaction signature\")) {\n      text = i18n.t(\"messages.UserDeniedSignature\");\n    }\n  }\n\n  return dispatch(error({\n    text,\n    error: err\n  }));\n};","map":{"version":3,"sources":["/Users/anthonymann/Desktop/Snowbank DAO/snowbank-frontend/src/helpers/metamask-error-wrap.ts"],"names":["error","messages","i18n","metamaskErrorWrap","err","dispatch","text","something_wrong","code","message","indexOf","t","data","includes","split","trim"],"mappings":"AACA,SAASA,KAAT,QAAsB,gCAAtB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,GAAD,EAAWC,QAAX,KAAkC;AAC/D,MAAIC,IAAI,GAAGL,QAAQ,CAACM,eAApB;;AAEA,MAAIH,GAAG,CAACI,IAAJ,IAAYJ,GAAG,CAACI,IAAJ,KAAa,CAAC,KAA9B,EAAqC;AACjC,QAAIJ,GAAG,CAACK,OAAJ,CAAYC,OAAZ,CAAoB,uBAApB,KAAgD,CAApD,EAAuD;AACnDJ,MAAAA,IAAI,GAAGJ,IAAI,CAACS,CAAL,CAAO,kCAAP,IAA6C,oDAApD;AACH;;AAED,QAAIP,GAAG,CAACQ,IAAJ,IAAYR,GAAG,CAACQ,IAAJ,CAASH,OAAzB,EAAkC;AAC9BH,MAAAA,IAAI,GAAGF,GAAG,CAACQ,IAAJ,CAASH,OAAT,CAAiBI,QAAjB,CAA0B,GAA1B,IAAiCT,GAAG,CAACQ,IAAJ,CAASH,OAAT,CAAiBK,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,EAA+BC,IAA/B,EAAjC,GAAyEX,GAAG,CAACQ,IAAJ,CAASA,IAAT,IAAiBR,GAAG,CAACQ,IAAJ,CAASH,OAA1G;AACH;;AAED,QAAIL,GAAG,CAACQ,IAAJ,IAAYR,GAAG,CAACQ,IAAJ,CAASH,OAArB,IAAgCL,GAAG,CAACQ,IAAJ,CAASH,OAAT,CAAiBI,QAAjB,CAA0B,gCAA1B,CAApC,EAAiG;AAC7FP,MAAAA,IAAI,GAAGJ,IAAI,CAACS,CAAL,CAAO,8BAAP,CAAP;AACH;;AAED,QAAIP,GAAG,CAACQ,IAAJ,IAAYR,GAAG,CAACQ,IAAJ,CAASH,OAArB,IAAgCL,GAAG,CAACQ,IAAJ,CAASH,OAAT,CAAiBI,QAAjB,CAA0B,gBAA1B,CAApC,EAAiF;AAC7EP,MAAAA,IAAI,GAAGJ,IAAI,CAACS,CAAL,CAAO,uBAAP,CAAP;AACH;AACJ;;AAED,MAAIP,GAAG,CAACI,IAAJ,IAAYJ,GAAG,CAACI,IAAJ,KAAa,IAA7B,EAAmC;AAC/B,QAAIJ,GAAG,CAACK,OAAJ,CAAYI,QAAZ,CAAqB,mCAArB,CAAJ,EAA+D;AAC3DP,MAAAA,IAAI,GAAGJ,IAAI,CAACS,CAAL,CAAO,8BAAP,CAAP;AACH;AACJ;;AAED,SAAON,QAAQ,CAACL,KAAK,CAAC;AAAEM,IAAAA,IAAF;AAAQN,IAAAA,KAAK,EAAEI;AAAf,GAAD,CAAN,CAAf;AACH,CA5BM","sourcesContent":["import { Dispatch } from \"redux\";\nimport { error } from \"../store/slices/messages-slice\";\nimport { messages } from \"../constants/messages\";\n\nimport i18n from \"../i18n\";\n\nexport const metamaskErrorWrap = (err: any, dispatch: Dispatch) => {\n    let text = messages.something_wrong;\n\n    if (err.code && err.code === -32603) {\n        if (err.message.indexOf(\"ds-math-sub-underflow\") >= 0) {\n            text = i18n.t(\"messages.BondMoreThanYourBalance\") + \" Error code: 32603. Message: ds-math-sub-underflow\";\n        }\n\n        if (err.data && err.data.message) {\n            text = err.data.message.includes(\":\") ? err.data.message.split(\":\")[1].trim() : err.data.data || err.data.message;\n        }\n\n        if (err.data && err.data.message && err.data.message.includes(\"gas required exceeds allowance\")) {\n            text = i18n.t(\"messages.InsufficientBalance\");\n        }\n\n        if (err.data && err.data.message && err.data.message.includes(\"Bond too small\")) {\n            text = i18n.t(\"messages.BondTooSmall\");\n        }\n    }\n\n    if (err.code && err.code === 4001) {\n        if (err.message.includes(\"User denied transaction signature\")) {\n            text = i18n.t(\"messages.UserDeniedSignature\");\n        }\n    }\n\n    return dispatch(error({ text, error: err }));\n};\n"]},"metadata":{},"sourceType":"module"}