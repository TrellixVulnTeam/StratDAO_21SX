{"ast":null,"code":"var _jsxFileName = \"/Users/anthonymann/Desktop/Snowbank DAO/Tomb/src/views/Pit/Pit.tsx\";\nimport React, { useCallback, useMemo } from 'react';\nimport Page from '../../components/Page';\nimport { createGlobalStyle } from 'styled-components';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { useWallet } from 'use-wallet';\nimport UnlockWallet from '../../components/UnlockWallet';\nimport PageHeader from '../../components/PageHeader';\nimport ExchangeCard from './components/ExchangeCard';\nimport styled from 'styled-components';\nimport Spacer from '../../components/Spacer';\nimport useBondStats from '../../hooks/useBondStats';\nimport useTombFinance from '../../hooks/useTombFinance';\nimport useCashPriceInLastTWAP from '../../hooks/useCashPriceInLastTWAP';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport ExchangeStat from './components/ExchangeStat';\nimport useTokenBalance from '../../hooks/useTokenBalance';\nimport useBondsPurchasable from '../../hooks/useBondsPurchasable';\nimport { getDisplayBalance } from '../../utils/formatBalance';\nimport { BOND_REDEEM_PRICE, BOND_REDEEM_PRICE_BN } from '../../tomb-finance/constants';\nimport { Typography } from '@material-ui/core';\nconst BackgroundImage = createGlobalStyle`\n  body {\n    background-color: var(--black);\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='32' viewBox='0 0 16 32'%3E%3Cg fill='%231D1E1F' fill-opacity='0.4'%3E%3Cpath fill-rule='evenodd' d='M0 24h4v2H0v-2zm0 4h6v2H0v-2zm0-8h2v2H0v-2zM0 0h4v2H0V0zm0 4h2v2H0V4zm16 20h-6v2h6v-2zm0 4H8v2h8v-2zm0-8h-4v2h4v-2zm0-20h-6v2h6V0zm0 4h-4v2h4V4zm-2 12h2v2h-2v-2zm0-8h2v2h-2V8zM2 8h10v2H2V8zm0 8h10v2H2v-2zm-2-4h14v2H0v-2zm4-8h6v2H4V4zm0 16h6v2H4v-2zM6 0h2v2H6V0zm0 24h2v2H6v-2z'/%3E%3C/g%3E%3C/svg%3E\");\n}\n\n* {\n    border-radius: 0 !important;\n    box-shadow: none !important;\n}\n`;\n\nconst Pit = () => {\n  const {\n    path\n  } = useRouteMatch();\n  const {\n    account\n  } = useWallet();\n  const tombFinance = useTombFinance();\n  const addTransaction = useTransactionAdder();\n  const bondStat = useBondStats();\n  const cashPrice = useCashPriceInLastTWAP();\n  const bondsPurchasable = useBondsPurchasable();\n  const bondBalance = useTokenBalance(tombFinance === null || tombFinance === void 0 ? void 0 : tombFinance.TBOND);\n  const handleBuyBonds = useCallback(async amount => {\n    const tx = await tombFinance.buyBonds(amount);\n    addTransaction(tx, {\n      summary: `Buy ${Number(amount).toFixed(2)} TBOND with ${amount} TOMB`\n    });\n  }, [tombFinance, addTransaction]);\n  const handleRedeemBonds = useCallback(async amount => {\n    const tx = await tombFinance.redeemBonds(amount);\n    addTransaction(tx, {\n      summary: `Redeem ${amount} TBOND`\n    });\n  }, [tombFinance, addTransaction]);\n  const isBondRedeemable = useMemo(() => cashPrice.gt(BOND_REDEEM_PRICE_BN), [cashPrice]);\n  const isBondPurchasable = useMemo(() => Number(bondStat === null || bondStat === void 0 ? void 0 : bondStat.tokenInFtm) < 1.01, [bondStat]);\n  return /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BackgroundImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), !!account ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textPrimary\",\n    align: \"center\",\n    variant: \"h3\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"3Bonds\"), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    icon: '🏦',\n    subtitle: \"Earn premiums upon redemption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(StyledBond, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ExchangeCard, {\n    action: \"Purchase\",\n    fromToken: tombFinance.TOMB,\n    fromTokenName: \"TOMB\",\n    toToken: tombFinance.TBOND,\n    toTokenName: \"TBOND\",\n    priceDesc: !isBondPurchasable ? 'TOMB is over peg' : getDisplayBalance(bondsPurchasable, 18, 4) + ' TBOND available for purchase',\n    onExchange: handleBuyBonds,\n    disabled: !bondStat || isBondRedeemable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(StyledStatsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ExchangeStat, {\n    tokenName: \"TOMB\",\n    description: \"Last-Hour TWAP Price\",\n    price: getDisplayBalance(cashPrice, 18, 4),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Spacer, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ExchangeStat, {\n    tokenName: \"TBOND\",\n    description: \"Current Price: (TOMB)^2\",\n    price: Number(bondStat === null || bondStat === void 0 ? void 0 : bondStat.tokenInFtm).toFixed(2) || '-',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ExchangeCard, {\n    action: \"Redeem\",\n    fromToken: tombFinance.TBOND,\n    fromTokenName: \"TBOND\",\n    toToken: tombFinance.TOMB,\n    toTokenName: \"TOMB\",\n    priceDesc: `${getDisplayBalance(bondBalance)} TBOND Available in wallet`,\n    onExchange: handleRedeemBonds,\n    disabled: !bondStat || bondBalance.eq(0) || !isBondRedeemable,\n    disabledDescription: !isBondRedeemable ? `Enabled when TOMB > ${BOND_REDEEM_PRICE}FTM` : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  })))) : /*#__PURE__*/React.createElement(UnlockWallet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst StyledBond = styled.div`\n  display: flex;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\nconst StyledStatsWrapper = styled.div`\n  display: flex;\n  flex: 0.8;\n  margin: 0 20px;\n  flex-direction: column;\n\n  @media (max-width: 768px) {\n    width: 80%;\n    margin: 16px 0;\n  }\n`;\nexport default Pit;","map":{"version":3,"sources":["/Users/anthonymann/Desktop/Snowbank DAO/Tomb/src/views/Pit/Pit.tsx"],"names":["React","useCallback","useMemo","Page","createGlobalStyle","Route","Switch","useRouteMatch","useWallet","UnlockWallet","PageHeader","ExchangeCard","styled","Spacer","useBondStats","useTombFinance","useCashPriceInLastTWAP","useTransactionAdder","ExchangeStat","useTokenBalance","useBondsPurchasable","getDisplayBalance","BOND_REDEEM_PRICE","BOND_REDEEM_PRICE_BN","Typography","BackgroundImage","Pit","path","account","tombFinance","addTransaction","bondStat","cashPrice","bondsPurchasable","bondBalance","TBOND","handleBuyBonds","amount","tx","buyBonds","summary","Number","toFixed","handleRedeemBonds","redeemBonds","isBondRedeemable","gt","isBondPurchasable","tokenInFtm","TOMB","eq","StyledBond","div","StyledCardWrapper","StyledStatsWrapper"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport Page from '../../components/Page';\nimport PitImage from '../../assets/img/pit.png';\nimport { createGlobalStyle } from 'styled-components';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { useWallet } from 'use-wallet';\nimport UnlockWallet from '../../components/UnlockWallet';\nimport PageHeader from '../../components/PageHeader';\nimport ExchangeCard from './components/ExchangeCard';\nimport styled from 'styled-components';\nimport Spacer from '../../components/Spacer';\nimport useBondStats from '../../hooks/useBondStats';\nimport useTombFinance from '../../hooks/useTombFinance';\nimport useCashPriceInLastTWAP from '../../hooks/useCashPriceInLastTWAP';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport ExchangeStat from './components/ExchangeStat';\nimport useTokenBalance from '../../hooks/useTokenBalance';\nimport useBondsPurchasable from '../../hooks/useBondsPurchasable';\nimport { getDisplayBalance } from '../../utils/formatBalance';\nimport { BOND_REDEEM_PRICE, BOND_REDEEM_PRICE_BN } from '../../tomb-finance/constants';\nimport { Typography } from '@material-ui/core';\n\n\nconst BackgroundImage = createGlobalStyle`\n  body {\n    background-color: var(--black);\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='32' viewBox='0 0 16 32'%3E%3Cg fill='%231D1E1F' fill-opacity='0.4'%3E%3Cpath fill-rule='evenodd' d='M0 24h4v2H0v-2zm0 4h6v2H0v-2zm0-8h2v2H0v-2zM0 0h4v2H0V0zm0 4h2v2H0V4zm16 20h-6v2h6v-2zm0 4H8v2h8v-2zm0-8h-4v2h4v-2zm0-20h-6v2h6V0zm0 4h-4v2h4V4zm-2 12h2v2h-2v-2zm0-8h2v2h-2V8zM2 8h10v2H2V8zm0 8h10v2H2v-2zm-2-4h14v2H0v-2zm4-8h6v2H4V4zm0 16h6v2H4v-2zM6 0h2v2H6V0zm0 24h2v2H6v-2z'/%3E%3C/g%3E%3C/svg%3E\");\n}\n\n* {\n    border-radius: 0 !important;\n    box-shadow: none !important;\n}\n`;\n\nconst Pit: React.FC = () => {\n  const { path } = useRouteMatch();\n  const { account } = useWallet();\n  const tombFinance = useTombFinance();\n  const addTransaction = useTransactionAdder();\n  const bondStat = useBondStats();\n  const cashPrice = useCashPriceInLastTWAP();\n  const bondsPurchasable = useBondsPurchasable();\n\n  const bondBalance = useTokenBalance(tombFinance?.TBOND);\n\n  const handleBuyBonds = useCallback(\n    async (amount: string) => {\n      const tx = await tombFinance.buyBonds(amount);\n      addTransaction(tx, {\n        summary: `Buy ${Number(amount).toFixed(2)} TBOND with ${amount} TOMB`,\n      });\n    },\n    [tombFinance, addTransaction],\n  );\n\n  const handleRedeemBonds = useCallback(\n    async (amount: string) => {\n      const tx = await tombFinance.redeemBonds(amount);\n      addTransaction(tx, { summary: `Redeem ${amount} TBOND` });\n    },\n    [tombFinance, addTransaction],\n  );\n  const isBondRedeemable = useMemo(() => cashPrice.gt(BOND_REDEEM_PRICE_BN), [cashPrice]);\n  const isBondPurchasable = useMemo(() => Number(bondStat?.tokenInFtm) < 1.01, [bondStat]);\n\n  return (\n    <Switch>\n      <Page>\n        <BackgroundImage />\n        {!!account ? (\n          <>\n            <Typography color=\"textPrimary\" align=\"center\" variant=\"h3\" gutterBottom>\n              3Bonds\n            </Typography>\n            <Route exact path={path}>\n              <PageHeader icon={'🏦'} subtitle=\"Earn premiums upon redemption\" />\n            </Route>\n            <StyledBond>\n              <StyledCardWrapper>\n                <ExchangeCard\n                  action=\"Purchase\"\n                  fromToken={tombFinance.TOMB}\n                  fromTokenName=\"TOMB\"\n                  toToken={tombFinance.TBOND}\n                  toTokenName=\"TBOND\"\n                  priceDesc={\n                    !isBondPurchasable\n                      ? 'TOMB is over peg'\n                      : getDisplayBalance(bondsPurchasable, 18, 4) + ' TBOND available for purchase'\n                  }\n                  onExchange={handleBuyBonds}\n                  disabled={!bondStat || isBondRedeemable}\n                />\n              </StyledCardWrapper>\n              <StyledStatsWrapper>\n                <ExchangeStat\n                  tokenName=\"TOMB\"\n                  description=\"Last-Hour TWAP Price\"\n                  price={getDisplayBalance(cashPrice, 18, 4)}\n                />\n                <Spacer size=\"md\" />\n                <ExchangeStat\n                  tokenName=\"TBOND\"\n                  description=\"Current Price: (TOMB)^2\"\n                  price={Number(bondStat?.tokenInFtm).toFixed(2) || '-'}\n                />\n              </StyledStatsWrapper>\n              <StyledCardWrapper>\n                <ExchangeCard\n                  action=\"Redeem\"\n                  fromToken={tombFinance.TBOND}\n                  fromTokenName=\"TBOND\"\n                  toToken={tombFinance.TOMB}\n                  toTokenName=\"TOMB\"\n                  priceDesc={`${getDisplayBalance(bondBalance)} TBOND Available in wallet`}\n                  onExchange={handleRedeemBonds}\n                  disabled={!bondStat || bondBalance.eq(0) || !isBondRedeemable}\n                  disabledDescription={!isBondRedeemable ? `Enabled when TOMB > ${BOND_REDEEM_PRICE}FTM` : null}\n                />\n              </StyledCardWrapper>\n            </StyledBond>\n          </>\n        ) : (\n          <UnlockWallet />\n        )}\n      </Page>\n    </Switch>\n  );\n};\n\nconst StyledBond = styled.div`\n  display: flex;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nconst StyledStatsWrapper = styled.div`\n  display: flex;\n  flex: 0.8;\n  margin: 0 20px;\n  flex-direction: column;\n\n  @media (max-width: 768px) {\n    width: 80%;\n    margin: 16px 0;\n  }\n`;\n\nexport default Pit;\n"]},"metadata":{},"sourceType":"module"}