{"ast":null,"code":"var _jsxFileName = \"/Users/anthonymann/Desktop/Snowbank DAO/snowbank-frontend/src/views/ChooseBond/BondRow.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { priceUnits, trim } from \"../../helpers\";\nimport BondLogo from \"../../components/BondLogo\";\nimport { Paper, TableRow, TableCell, Slide, Link } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./choosebond.scss\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function BondDataCard(_ref) {\n  _s();\n\n  var _bond$bondPrice;\n\n  let {\n    bond\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const isBondLoading = (_bond$bondPrice = !bond.bondPrice) !== null && _bond$bondPrice !== void 0 ? _bond$bondPrice : true;\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    in: true,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: \"bond-data-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bond-pair\",\n        children: [/*#__PURE__*/_jsxDEV(BondLogo, {\n          bond: bond\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bond-name\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bond-name-title\",\n            children: bond.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), bond.isLP && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: bond.lpUrl,\n              target: \"_blank\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"bond-name-title\",\n                children: t(\"bond:ViewContract\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"bond-name-title\",\n          children: t(\"Price\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"bond-price bond-name-title\",\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [priceUnits(bond), \" \", isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"50px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 65\n            }, this) : trim(bond.bondPrice, 2)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"bond-name-title\",\n          children: t(\"ROI\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"bond-name-title\",\n          children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n            width: \"50px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 69\n          }, this) : `${trim(bond.bondDiscount * 100, 2)}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"bond-name-title\",\n          children: t(\"bond:Purchased\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"bond-name-title\",\n          children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n            width: \"80px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this) : new Intl.NumberFormat(\"en-US\", {\n            style: \"currency\",\n            currency: \"USD\",\n            maximumFractionDigits: 0,\n            minimumFractionDigits: 0\n          }).format(bond.purchased)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        component: NavLink,\n        to: `/mints/${bond.name}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bond-table-btn\",\n          children: bond.isActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: t(\"bond:MintBond\", {\n              bond: bond.displayName\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 42\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: t(\"bond:RedeemBond\", {\n              bond: bond.displayName\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 100\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BondDataCard, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = BondDataCard;\nexport function BondTableData(_ref2) {\n  _s2();\n\n  var _bond$bondPrice2;\n\n  let {\n    bond\n  } = _ref2;\n  const {\n    t\n  } = useTranslation();\n  const isBondLoading = (_bond$bondPrice2 = !bond.bondPrice) !== null && _bond$bondPrice2 !== void 0 ? _bond$bondPrice2 : true;\n  const bondSoldOut = bond.bondDiscount * 100 < -30;\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    className: bondSoldOut ? \"bond-soldout\" : \"\",\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      align: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(BondLogo, {\n        bond: bond\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bond-name\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"bond-name-title\",\n          children: bond.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), bond.isLP && /*#__PURE__*/_jsxDEV(Link, {\n          color: \"primary\",\n          href: bond.lpUrl,\n          target: \"_blank\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bond-name-title\",\n            children: t(\"bond:ViewContract\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      align: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"bond-name-title\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"currency-icon\",\n            children: priceUnits(bond)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), \" \", isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n            width: \"50px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 100\n          }, this) : trim(bond.bondPrice, 2)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      align: \"right\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"bond-name-title\",\n        children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n          width: \"50px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 65\n        }, this) : `${trim(bond.bondDiscount * 100, 2)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      align: \"right\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"bond-name-title\",\n        children: isBondLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n          width: \"50px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this) : new Intl.NumberFormat(\"en-US\", {\n          style: \"currency\",\n          currency: \"USD\",\n          maximumFractionDigits: 0,\n          minimumFractionDigits: 0\n        }).format(bond.purchased)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        component: NavLink,\n        to: `/mints/${bond.name}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bond-table-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: bond.isActive ? t(\"bond:Mint\") : t(\"bond:Redeem\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(BondTableData, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c2 = BondTableData;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BondDataCard\");\n$RefreshReg$(_c2, \"BondTableData\");","map":{"version":3,"sources":["/Users/anthonymann/Desktop/Snowbank DAO/snowbank-frontend/src/views/ChooseBond/BondRow.tsx"],"names":["priceUnits","trim","BondLogo","Paper","TableRow","TableCell","Slide","Link","NavLink","Skeleton","useTranslation","BondDataCard","bond","t","isBondLoading","bondPrice","displayName","isLP","lpUrl","bondDiscount","Intl","NumberFormat","style","currency","maximumFractionDigits","minimumFractionDigits","format","purchased","name","isActive","BondTableData","bondSoldOut"],"mappings":"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","sourcesContent":["import { priceUnits, trim } from \"../../helpers\";\nimport BondLogo from \"../../components/BondLogo\";\nimport { Paper, TableRow, TableCell, Slide, Link } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./choosebond.scss\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { IAllBondData } from \"../../hooks/bonds\";\n\nimport { useTranslation } from \"react-i18next\";\n\ninterface IBondProps {\n    bond: IAllBondData;\n}\n\nexport function BondDataCard({ bond }: IBondProps) {\n    const { t } = useTranslation();\n\n    const isBondLoading = !bond.bondPrice ?? true;\n\n    return (\n        <Slide direction=\"up\" in={true}>\n            <Paper className=\"bond-data-card\">\n                <div className=\"bond-pair\">\n                    <BondLogo bond={bond} />\n                    <div className=\"bond-name\">\n                        <p className=\"bond-name-title\">{bond.displayName}</p>\n                        {bond.isLP && (\n                            <div>\n                                <Link href={bond.lpUrl} target=\"_blank\">\n                                    <p className=\"bond-name-title\">{t(\"bond:ViewContract\")}</p>\n                                </Link>\n                            </div>\n                        )}\n                    </div>\n                </div>\n\n                <div className=\"data-row\">\n                    <p className=\"bond-name-title\">{t(\"Price\")}</p>\n                    <p className=\"bond-price bond-name-title\">\n                        <>\n                            {priceUnits(bond)} {isBondLoading ? <Skeleton width=\"50px\" /> : trim(bond.bondPrice, 2)}\n                        </>\n                    </p>\n                </div>\n\n                <div className=\"data-row\">\n                    <p className=\"bond-name-title\">{t(\"ROI\")}</p>\n                    <p className=\"bond-name-title\">{isBondLoading ? <Skeleton width=\"50px\" /> : `${trim(bond.bondDiscount * 100, 2)}%`}</p>\n                </div>\n\n                <div className=\"data-row\">\n                    <p className=\"bond-name-title\">{t(\"bond:Purchased\")}</p>\n                    <p className=\"bond-name-title\">\n                        {isBondLoading ? (\n                            <Skeleton width=\"80px\" />\n                        ) : (\n                            new Intl.NumberFormat(\"en-US\", {\n                                style: \"currency\",\n                                currency: \"USD\",\n                                maximumFractionDigits: 0,\n                                minimumFractionDigits: 0,\n                            }).format(bond.purchased)\n                        )}\n                    </p>\n                </div>\n                <Link component={NavLink} to={`/mints/${bond.name}`}>\n                    <div className=\"bond-table-btn\">\n                        {bond.isActive ? <p>{t(\"bond:MintBond\", { bond: bond.displayName })}</p> : <p>{t(\"bond:RedeemBond\", { bond: bond.displayName })}</p>}\n                    </div>\n                </Link>\n            </Paper>\n        </Slide>\n    );\n}\n\nexport function BondTableData({ bond }: IBondProps) {\n    const { t } = useTranslation();\n\n    const isBondLoading = !bond.bondPrice ?? true;\n    const bondSoldOut = bond.bondDiscount * 100 < -30;\n    return (\n        <TableRow className={bondSoldOut ? \"bond-soldout\" : \"\"}>\n            <TableCell align=\"left\">\n                <BondLogo bond={bond} />\n                <div className=\"bond-name\">\n                    <p className=\"bond-name-title\">{bond.displayName}</p>\n                    {bond.isLP && (\n                        <Link color=\"primary\" href={bond.lpUrl} target=\"_blank\">\n                            <p className=\"bond-name-title\">{t(\"bond:ViewContract\")}</p>\n                        </Link>\n                    )}\n                </div>\n            </TableCell>\n            <TableCell align=\"center\">\n                <p className=\"bond-name-title\">\n                    <>\n                        <span className=\"currency-icon\">{priceUnits(bond)}</span> {isBondLoading ? <Skeleton width=\"50px\" /> : trim(bond.bondPrice, 2)}\n                    </>\n                </p>\n            </TableCell>\n            <TableCell align=\"right\">\n                <p className=\"bond-name-title\">{isBondLoading ? <Skeleton width=\"50px\" /> : `${trim(bond.bondDiscount * 100, 2)}%`}</p>\n            </TableCell>\n            <TableCell align=\"right\">\n                <p className=\"bond-name-title\">\n                    {isBondLoading ? (\n                        <Skeleton width=\"50px\" />\n                    ) : (\n                        new Intl.NumberFormat(\"en-US\", {\n                            style: \"currency\",\n                            currency: \"USD\",\n                            maximumFractionDigits: 0,\n                            minimumFractionDigits: 0,\n                        }).format(bond.purchased)\n                    )}\n                </p>\n            </TableCell>\n            <TableCell>\n                <Link component={NavLink} to={`/mints/${bond.name}`}>\n                    <div className=\"bond-table-btn\">\n                        <p>{bond.isActive ? t(\"bond:Mint\") : t(\"bond:Redeem\")}</p>\n                    </div>\n                </Link>\n            </TableCell>\n        </TableRow>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}