{"ast":null,"code":"var _jsxFileName = \"/Users/anthonymann/Desktop/Snowbank DAO/snowbank-frontend/src/components/Messages/snackbar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, forwardRef, useCallback } from \"react\";\nimport classnames from \"classnames\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSnackbar, SnackbarContent } from \"notistack\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport SuccessIcon from \"@material-ui/icons/CheckCircle\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    [theme.breakpoints.up(\"sm\")]: {\n      minWidth: \"344px !important\"\n    },\n    maxWidth: 500\n  },\n  card: {\n    width: \"100%\"\n  },\n  error: {\n    backgroundColor: \"#d32f2f\"\n  },\n  info: {\n    backgroundColor: \"#2979ff\"\n  },\n  warning: {\n    backgroundColor: \"#ffa000\"\n  },\n  success: {\n    backgroundColor: \"#43a047\"\n  },\n  typography: {\n    color: \"#FFFFFF\",\n    fontFamily: \"Montserrat SemiBold\"\n  },\n  actionRoot: {\n    padding: \"8px 8px 8px 16px\",\n    justifyContent: \"space-between\",\n    color: \"#FFFFFF\"\n  },\n  icons: {\n    marginLeft: \"auto\"\n  },\n  expand: {\n    padding: \"8px 8px\",\n    transform: \"rotate(0deg)\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    }),\n    color: \"#FFFFFF\"\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  collapse: {\n    padding: 16\n  },\n  checkIcon: {\n    fontSize: 20,\n    color: \"#b3b3b3\",\n    paddingRight: 4\n  },\n  checkIconCopy: {\n    color: \"#43a047\"\n  },\n  button: {\n    padding: 0,\n    textTransform: \"none\"\n  },\n  errorWrap: {\n    marginTop: 10\n  },\n  errorText: {\n    whiteSpace: \"pre-wrap\",\n    maxHeight: 300,\n    overflow: \"auto\",\n    background: \"rgba(0,0,0,0.1)\",\n    padding: 5,\n    borderRadius: 5\n  }\n}));\nconst SnackMessage = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const classes = useStyles();\n  const {\n    closeSnackbar\n  } = useSnackbar();\n  const [expanded, setExpanded] = useState(false);\n  const [isCopy, setIsCopy] = useState(false);\n  const handleExpandClick = useCallback(() => {\n    setExpanded(oldExpanded => !oldExpanded);\n  }, []);\n  const handleDismiss = useCallback(() => {\n    closeSnackbar(props.id);\n  }, [props.id, closeSnackbar]);\n\n  const getIcon = severity => {\n    switch (severity) {\n      case \"error\":\n        return /*#__PURE__*/_jsxDEV(ErrorIcon, {\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 24\n        }, this);\n\n      case \"info\":\n        return /*#__PURE__*/_jsxDEV(InfoIcon, {\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 24\n        }, this);\n\n      case \"success\":\n        return /*#__PURE__*/_jsxDEV(SuccessIcon, {\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 24\n        }, this);\n\n      case \"warning\":\n        return /*#__PURE__*/_jsxDEV(WarningIcon, {\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 24\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 24\n        }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(SnackbarContent, {\n    ref: ref,\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classnames(classes.card, classes[props.message.severity]),\n      children: [/*#__PURE__*/_jsxDEV(CardActions, {\n        classes: {\n          root: classes.actionRoot\n        },\n        children: [getIcon(props.message.severity), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          className: classes.typography,\n          children: props.message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.icons,\n          children: [props.message.error && /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"Show more\",\n            className: classnames(classes.expand, {\n              [classes.expandOpen]: expanded\n            }),\n            onClick: handleExpandClick,\n            children: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {\n              color: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            className: classes.expand,\n            onClick: handleDismiss,\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n              color: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: expanded,\n        timeout: \"auto\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.collapse,\n          children: [/*#__PURE__*/_jsxDEV(CopyToClipboard, {\n            text: JSON.stringify(props.message.error),\n            onCopy: () => setIsCopy(true),\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              className: classes.button,\n              children: [/*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                className: classnames(classes.checkIcon, {\n                  [classes.checkIconCopy]: isCopy\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this), t(\"CopyToClipboard\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.errorWrap,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: [t(\"ErrorMessage\"), \": \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.errorText,\n              children: JSON.stringify(props.message.error, null, 2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n}, \"bCezjZz3XV67g+ATXkkDcXximj4=\", false, function () {\n  return [useTranslation, useStyles, useSnackbar];\n}));\n_c2 = SnackMessage;\nexport default SnackMessage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SnackMessage$forwardRef\");\n$RefreshReg$(_c2, \"SnackMessage\");","map":{"version":3,"sources":["/Users/anthonymann/Desktop/Snowbank DAO/snowbank-frontend/src/components/Messages/snackbar.tsx"],"names":["React","useState","forwardRef","useCallback","classnames","makeStyles","useSnackbar","SnackbarContent","Collapse","Paper","Typography","Card","CardActions","Button","IconButton","CloseIcon","ExpandMoreIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","SuccessIcon","CopyToClipboard","useTranslation","useStyles","theme","root","breakpoints","up","minWidth","maxWidth","card","width","error","backgroundColor","info","warning","success","typography","color","fontFamily","actionRoot","padding","justifyContent","icons","marginLeft","expand","transform","transition","transitions","create","duration","shortest","expandOpen","collapse","checkIcon","fontSize","paddingRight","checkIconCopy","button","textTransform","errorWrap","marginTop","errorText","whiteSpace","maxHeight","overflow","background","borderRadius","SnackMessage","props","ref","t","classes","closeSnackbar","expanded","setExpanded","isCopy","setIsCopy","handleExpandClick","oldExpanded","handleDismiss","id","getIcon","severity","message","text","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState, forwardRef, useCallback } from \"react\";\nimport classnames from \"classnames\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSnackbar, SnackbarContent } from \"notistack\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport { Message } from \"../../store/slices/messages-slice\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport SuccessIcon from \"@material-ui/icons/CheckCircle\";\nimport { Color } from \"@material-ui/lab/Alert\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nimport { useTranslation } from \"react-i18next\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"sm\")]: {\n            minWidth: \"344px !important\",\n        },\n        maxWidth: 500,\n    },\n    card: {\n        width: \"100%\",\n    },\n    error: {\n        backgroundColor: \"#d32f2f\",\n    },\n    info: {\n        backgroundColor: \"#2979ff\",\n    },\n    warning: {\n        backgroundColor: \"#ffa000\",\n    },\n    success: {\n        backgroundColor: \"#43a047\",\n    },\n    typography: {\n        color: \"#FFFFFF\",\n        fontFamily: \"Montserrat SemiBold\",\n    },\n    actionRoot: {\n        padding: \"8px 8px 8px 16px\",\n        justifyContent: \"space-between\",\n        color: \"#FFFFFF\",\n    },\n    icons: {\n        marginLeft: \"auto\",\n    },\n    expand: {\n        padding: \"8px 8px\",\n        transform: \"rotate(0deg)\",\n        transition: theme.transitions.create(\"transform\", {\n            duration: theme.transitions.duration.shortest,\n        }),\n        color: \"#FFFFFF\",\n    },\n    expandOpen: {\n        transform: \"rotate(180deg)\",\n    },\n    collapse: {\n        padding: 16,\n    },\n    checkIcon: {\n        fontSize: 20,\n        color: \"#b3b3b3\",\n        paddingRight: 4,\n    },\n    checkIconCopy: {\n        color: \"#43a047\",\n    },\n    button: {\n        padding: 0,\n        textTransform: \"none\",\n    },\n    errorWrap: {\n        marginTop: 10,\n    },\n    errorText: {\n        whiteSpace: \"pre-wrap\",\n        maxHeight: 300,\n        overflow: \"auto\",\n        background: \"rgba(0,0,0,0.1)\",\n        padding: 5,\n        borderRadius: 5,\n    },\n}));\n\nconst SnackMessage = forwardRef<HTMLDivElement, { id: string | number; message: Message }>((props, ref) => {\n    const { t } = useTranslation();\n\n    const classes = useStyles();\n    const { closeSnackbar } = useSnackbar();\n    const [expanded, setExpanded] = useState(false);\n    const [isCopy, setIsCopy] = useState(false);\n\n    const handleExpandClick = useCallback(() => {\n        setExpanded(oldExpanded => !oldExpanded);\n    }, []);\n\n    const handleDismiss = useCallback(() => {\n        closeSnackbar(props.id);\n    }, [props.id, closeSnackbar]);\n\n    const getIcon = (severity: Color) => {\n        switch (severity) {\n            case \"error\":\n                return <ErrorIcon color=\"inherit\" />;\n            case \"info\":\n                return <InfoIcon color=\"inherit\" />;\n            case \"success\":\n                return <SuccessIcon color=\"inherit\" />;\n            case \"warning\":\n                return <WarningIcon color=\"inherit\" />;\n            default:\n                return <div />;\n        }\n    };\n\n    return (\n        <SnackbarContent ref={ref} className={classes.root}>\n            <Card className={classnames(classes.card, classes[props.message.severity])}>\n                <CardActions classes={{ root: classes.actionRoot }}>\n                    {getIcon(props.message.severity)}\n                    <Typography variant=\"subtitle2\" className={classes.typography}>\n                        {props.message.text}\n                    </Typography>\n                    <div className={classes.icons}>\n                        {props.message.error && (\n                            <IconButton aria-label=\"Show more\" className={classnames(classes.expand, { [classes.expandOpen]: expanded })} onClick={handleExpandClick}>\n                                <ExpandMoreIcon color=\"inherit\" />\n                            </IconButton>\n                        )}\n                        <IconButton className={classes.expand} onClick={handleDismiss}>\n                            <CloseIcon color=\"inherit\" />\n                        </IconButton>\n                    </div>\n                </CardActions>\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <Paper className={classes.collapse}>\n                        <CopyToClipboard text={JSON.stringify(props.message.error)} onCopy={() => setIsCopy(true)}>\n                            <Button size=\"small\" className={classes.button}>\n                                <CheckCircleIcon className={classnames(classes.checkIcon, { [classes.checkIconCopy]: isCopy })} />\n                                {t(\"CopyToClipboard\")}\n                            </Button>\n                        </CopyToClipboard>\n                        <div className={classes.errorWrap}>\n                            <Typography>{t(\"ErrorMessage\")}: </Typography>\n                            <Typography className={classes.errorText}>{JSON.stringify(props.message.error, null, 2)}</Typography>\n                        </div>\n                    </Paper>\n                </Collapse>\n            </Card>\n        </SnackbarContent>\n    );\n});\n\nexport default SnackMessage;\n"]},"metadata":{},"sourceType":"module"}