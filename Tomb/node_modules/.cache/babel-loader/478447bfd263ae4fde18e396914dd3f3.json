{"ast":null,"code":"import axios from 'axios';\nimport { useState, useEffect } from 'react';\n\nconst useFantomPrice = () => {\n  const [price, setPrice] = useState(0);\n  const [marketCap, setMarketCap] = useState(0);\n  useEffect(() => {\n    getPrice();\n    const interval = setInterval(() => {\n      getPrice();\n    }, 10000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  return {\n    price,\n    marketCap\n  };\n\n  async function getPrice() {\n    const {\n      data\n    } = await axios('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=fantom');\n    setPrice(data[0].current_price);\n    setMarketCap(data[0].market_cap);\n  }\n};\n\nexport default useFantomPrice;","map":{"version":3,"sources":["/Users/anthonymann/Desktop/Snowbank DAO/Tomb/src/hooks/useFantomPrice.ts"],"names":["axios","useState","useEffect","useFantomPrice","price","setPrice","marketCap","setMarketCap","getPrice","interval","setInterval","clearInterval","data","current_price","market_cap"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,CAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,QAAQ;AACR,UAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/BF,MAAAA,QAAQ;AACX,KAF2B,EAEzB,KAFyB,CAA5B;AAGA,WAAO,MAAM;AACTG,MAAAA,aAAa,CAACF,QAAD,CAAb;AACH,KAFD;AAGH,GARQ,EAQN,EARM,CAAT;AASA,SAAO;AAACL,IAAAA,KAAD;AAAQE,IAAAA;AAAR,GAAP;;AAEA,iBAAeE,QAAf,GAA0B;AACtB,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAAC,2EAAD,CAA5B;AACAK,IAAAA,QAAQ,CAACO,IAAI,CAAC,CAAD,CAAJ,CAAQC,aAAT,CAAR;AACAN,IAAAA,YAAY,CAACK,IAAI,CAAC,CAAD,CAAJ,CAAQE,UAAT,CAAZ;AACH;AACJ,CApBD;;AAqBA,eAAeX,cAAf","sourcesContent":["import axios from 'axios';\nimport { useState, useEffect } from 'react';\n\nconst useFantomPrice = () => {\n    const [price, setPrice] = useState(0);\n    const [marketCap, setMarketCap] = useState(0);\n\n    useEffect(() => {\n        getPrice()\n        const interval = setInterval(() => {\n            getPrice()\n        }, 10000)\n        return () => {\n            clearInterval(interval);\n        }\n    }, [])\n    return {price, marketCap};\n    \n    async function getPrice() {\n        const { data } = await axios('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=fantom');\n        setPrice(data[0].current_price);\n        setMarketCap(data[0].market_cap);\n    }\n}\nexport default useFantomPrice;"]},"metadata":{},"sourceType":"module"}